{
  "openapi": "3.0.3",
  "x-mint": {
    "mcp": {
      "enabled": true
    }
  },
  "info": {
    "title": "Synthetic Aetherbot Domain API",
    "version": "0.2.0",
    "description": "Expanded synthetic domain contract with full CRUD/read patterns, pagination envelopes, standardized error model, action endpoints, and security for academies, stores, collectors, teams & memberships, battle stations, rule sets, entitlement profiles, currencies & accounts, catalog & cards, housing & allowance plans, inventory, packs & openings, trades, purchase orders, tournaments & results, league seasons & standings, events & participations, and sages."
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Academies"
    },
    {
      "name": "Stores"
    },
    {
      "name": "Collectors"
    },
    {
      "name": "Teams"
    },
    {
      "name": "BattleStations"
    },
    {
      "name": "RuleSets"
    },
    {
      "name": "EntitlementProfiles"
    },
    {
      "name": "Currencies"
    },
    {
      "name": "CurrencyAccounts"
    },
    {
      "name": "Catalog"
    },
    {
      "name": "Cards"
    },
    {
      "name": "Housing"
    },
    {
      "name": "Allowance"
    },
    {
      "name": "Inventory"
    },
    {
      "name": "Packs"
    },
    {
      "name": "Trades"
    },
    {
      "name": "PurchaseOrders"
    },
    {
      "name": "Tournaments"
    },
    {
      "name": "League"
    },
    {
      "name": "Events"
    },
    {
      "name": "Sages"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/academies": {
      "get": {
        "x-mint": {
          "mcp": {
            "enabled": true,
            "name": "get-acadamies",
            "description": "Get a list of academies"
          }
        },
        "tags": ["Academies"],
        "summary": "List academies",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AcademyListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAcademies"
      },
      "post": {
        "tags": ["Academies"],
        "summary": "Create academy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcademyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Academy"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAcademies"
      }
    },
    "/academies/{academyId}": {
      "get": {
        "tags": ["Academies"],
        "summary": "Get academy",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcademyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Academy"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAcademyById"
      },
      "patch": {
        "tags": ["Academies"],
        "summary": "Update academy",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcademyId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcademyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Academy"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "patchAcademiesById"
      }
    },
    "/stores": {
      "get": {
        "tags": ["Stores"],
        "summary": "List stores",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StoreListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listStores"
      },
      "post": {
        "tags": ["Stores"],
        "summary": "Create store",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createStores"
      }
    },
    "/stores/{storeId}": {
      "get": {
        "tags": ["Stores"],
        "summary": "Get store",
        "parameters": [
          {
            "$ref": "#/components/parameters/StoreId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getStoreById"
      },
      "patch": {
        "tags": ["Stores"],
        "summary": "Update store",
        "parameters": [
          {
            "$ref": "#/components/parameters/StoreId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateStores"
      }
    },
    "/battle-stations": {
      "get": {
        "tags": ["BattleStations"],
        "summary": "List battle stations",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/BattleStationListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listBattleStations"
      },
      "post": {
        "tags": ["BattleStations"],
        "summary": "Create battle station",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BattleStationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BattleStation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createBattleStations"
      }
    },
    "/battle-stations/{battleStationId}": {
      "get": {
        "tags": ["BattleStations"],
        "summary": "Get battle station",
        "parameters": [
          {
            "$ref": "#/components/parameters/BattleStationId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BattleStation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getBattleStationById"
      },
      "patch": {
        "tags": ["BattleStations"],
        "summary": "Update battle station",
        "parameters": [
          {
            "$ref": "#/components/parameters/BattleStationId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BattleStationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BattleStation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateBattleStations"
      }
    },
    "/rule-sets": {
      "get": {
        "tags": ["RuleSets"],
        "summary": "List rule sets",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RuleSetListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listRuleSets"
      },
      "post": {
        "tags": ["RuleSets"],
        "summary": "Create rule set",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleSetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSet"
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createRuleSets"
      }
    },
    "/rule-sets/{ruleSetId}": {
      "get": {
        "tags": ["RuleSets"],
        "summary": "Get rule set",
        "parameters": [
          {
            "$ref": "#/components/parameters/RuleSetId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getRuleSetById"
      },
      "patch": {
        "tags": ["RuleSets"],
        "summary": "Update rule set",
        "parameters": [
          {
            "$ref": "#/components/parameters/RuleSetId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleSetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "patchRuleSetsById"
      }
    },
    "/entitlement-profiles": {
      "get": {
        "tags": ["EntitlementProfiles"],
        "summary": "List entitlement profiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntitlementProfileListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listEntitlementProfiles"
      },
      "post": {
        "tags": ["EntitlementProfiles"],
        "summary": "Create entitlement profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitlementProfileCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEntitlementProfiles"
      }
    },
    "/entitlement-profiles/{entitlementProfileId}": {
      "get": {
        "tags": ["EntitlementProfiles"],
        "summary": "Get entitlement profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/EntitlementProfileId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getEntitlementProfileById"
      },
      "patch": {
        "tags": ["EntitlementProfiles"],
        "summary": "Update entitlement profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/EntitlementProfileId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitlementProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateEntitlementProfiles"
      }
    },
    "/currencies": {
      "get": {
        "tags": ["Currencies"],
        "summary": "List currencies",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CurrencyListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCurrencies"
      },
      "post": {
        "tags": ["Currencies"],
        "summary": "Create currency",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createCurrencies"
      }
    },
    "/currencies/{currencyId}": {
      "get": {
        "tags": ["Currencies"],
        "summary": "Get currency",
        "parameters": [
          {
            "$ref": "#/components/parameters/CurrencyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCurrencyById"
      },
      "patch": {
        "tags": ["Currencies"],
        "summary": "Update currency",
        "parameters": [
          {
            "$ref": "#/components/parameters/CurrencyId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateCurrencies"
      }
    },
    "/currency-accounts": {
      "get": {
        "tags": ["CurrencyAccounts"],
        "summary": "List currency accounts",
        "parameters": [
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CurrencyAccountListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCurrencyAccounts"
      },
      "post": {
        "tags": ["CurrencyAccounts"],
        "summary": "Create currency account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyAccountCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createCurrencyAccounts"
      }
    },
    "/currency-accounts/{currencyAccountId}": {
      "get": {
        "tags": ["CurrencyAccounts"],
        "summary": "Get currency account",
        "parameters": [
          {
            "$ref": "#/components/parameters/CurrencyAccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCurrencyAccountById"
      }
    },
    "/card-collectors": {
      "get": {
        "tags": ["Collectors"],
        "summary": "List card collectors",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardCollectorListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCardCollectors"
      },
      "post": {
        "tags": ["Collectors"],
        "summary": "Register card collector",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardCollectorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardCollector"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createCardCollectors"
      }
    },
    "/card-collectors/{collectorId}": {
      "get": {
        "tags": ["Collectors"],
        "summary": "Get card collector",
        "parameters": [
          {
            "$ref": "#/components/parameters/CollectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardCollector"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCardCollectorById"
      },
      "patch": {
        "tags": ["Collectors"],
        "summary": "Update card collector profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/CollectorId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardCollectorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardCollector"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateCardCollectors"
      }
    },
    "/teams": {
      "get": {
        "tags": ["Teams"],
        "summary": "List teams",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TeamListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTeams"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Create team",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTeams"
      }
    },
    "/teams/{teamId}": {
      "get": {
        "tags": ["Teams"],
        "summary": "Get team",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTeamById"
      },
      "patch": {
        "tags": ["Teams"],
        "summary": "Update team",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateTeamMembershipById"
      }
    },
    "/teams/{teamId}/members": {
      "get": {
        "tags": ["Teams"],
        "summary": "List team memberships",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TeamMembershipListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTeamsMembers"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Add team member",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMembershipCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMembership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTeamsMembers"
      }
    },
    "/teams/{teamId}/members/{teamMembershipId}": {
      "patch": {
        "tags": ["Teams"],
        "summary": "Update membership (role / activeFlag)",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          },
          {
            "$ref": "#/components/parameters/TeamMembershipId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMembershipUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMembership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateTeams"
      }
    },
    "/aetherbots": {
      "get": {
        "tags": ["Catalog"],
        "summary": "List aetherbots",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AetherbotListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAetherbots"
      },
      "post": {
        "tags": ["Catalog"],
        "summary": "Create aetherbot (immutable after creation)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AetherbotCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aetherbot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAetherbots"
      }
    },
    "/aetherbots/{aetherbotId}": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Get aetherbot",
        "parameters": [
          {
            "$ref": "#/components/parameters/AetherbotId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aetherbot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAetherbotById"
      }
    },
    "/aetherbot-cards": {
      "get": {
        "tags": ["Cards"],
        "summary": "List cards",
        "parameters": [
          {
            "name": "ownerCollectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AetherbotCardListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAetherbotCards"
      }
    },
    "/aetherbot-cards/{cardId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card",
        "parameters": [
          {
            "$ref": "#/components/parameters/CardId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AetherbotCard"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAetherbotCardById"
      }
    },
    "/aetherbot-cards/{cardId}/ownerships": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card ownership history",
        "parameters": [
          {
            "$ref": "#/components/parameters/CardId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardOwnershipListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAetherbotCardsOwnerships"
      }
    },
    "/housing-plans": {
      "get": {
        "tags": ["Housing"],
        "summary": "List housing plans",
        "responses": {
          "200": {
            "$ref": "#/components/responses/HousingPlanListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listHousingPlans"
      },
      "post": {
        "tags": ["Housing"],
        "summary": "Create housing plan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingPlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingPlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createHousingPlans"
      }
    },
    "/housing-plans/{housingPlanId}": {
      "get": {
        "tags": ["Housing"],
        "summary": "Get housing plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingPlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getHousingPlanById"
      },
      "patch": {
        "tags": ["Housing"],
        "summary": "Update housing plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingPlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingPlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateHousingPlans"
      }
    },
    "/housing-plans/{housingPlanId}/assignments": {
      "get": {
        "tags": ["Housing"],
        "summary": "List housing assignments for plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HousingAssignmentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getHousingPlansAssignments"
      },
      "post": {
        "tags": ["Housing"],
        "summary": "Create housing assignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingAssignmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingAssignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createHousingPlansAssignments"
      }
    },
    "/housing-assignments/{assignmentId}": {
      "patch": {
        "tags": ["Housing"],
        "summary": "Update housing assignment (end/cancel)",
        "parameters": [{ "$ref": "#/components/parameters/AssignmentId" }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingAssignmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingAssignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateHousingAssignments"
      }
    },
    "/allowance-plans": {
      "get": {
        "tags": ["Allowance"],
        "summary": "List allowance plans",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowancePlanListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAllowancePlans"
      },
      "post": {
        "tags": ["Allowance"],
        "summary": "Create allowance plan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowancePlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowancePlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAllowancePlans"
      }
    },
    "/allowance-plans/{allowancePlanId}": {
      "get": {
        "tags": ["Allowance"],
        "summary": "Get allowance plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowancePlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAllowancePlanById"
      },
      "patch": {
        "tags": ["Allowance"],
        "summary": "Update allowance plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowancePlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowancePlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateAllowancePlans"
      }
    },
    "/allowance-plans/{allowancePlanId}/enrollments": {
      "get": {
        "tags": ["Allowance"],
        "summary": "List allowance enrollments",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowanceEnrollmentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAllowancePlansEnrollments"
      },
      "post": {
        "tags": ["Allowance"],
        "summary": "Create enrollment",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowanceEnrollmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowanceEnrollment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAllowancePlansEnrollments"
      }
    },
    "/allowance-enrollments/{enrollmentId}": {
      "patch": {
        "tags": ["Allowance"],
        "summary": "Update enrollment (end/cancel)",
        "parameters": [{ "$ref": "#/components/parameters/EnrollmentId" }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowanceEnrollmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowanceEnrollment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateAllowanceEnrollments"
      }
    },
    "/inventory-items": {
      "get": {
        "tags": ["Inventory"],
        "summary": "List inventory items",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InventoryItemListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listInventoryItems"
      },
      "post": {
        "tags": ["Inventory"],
        "summary": "Create inventory item",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createInventoryItems"
      }
    },
    "/inventory-items/{inventoryItemId}": {
      "get": {
        "tags": ["Inventory"],
        "summary": "Get inventory item",
        "parameters": [
          {
            "$ref": "#/components/parameters/InventoryItemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getInventoryItemById"
      },
      "patch": {
        "tags": ["Inventory"],
        "summary": "Update inventory item",
        "parameters": [
          {
            "$ref": "#/components/parameters/InventoryItemId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateInventoryItems"
      }
    },
    "/packs": {
      "get": {
        "tags": ["Packs"],
        "summary": "List packs",
        "responses": {
          "200": {
            "$ref": "#/components/responses/PackListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listPacks"
      },
      "post": {
        "tags": ["Packs"],
        "summary": "Create pack definition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createPacks"
      }
    },
    "/packs/{packId}": {
      "get": {
        "tags": ["Packs"],
        "summary": "Get pack",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getPackById"
      },
      "patch": {
        "tags": ["Packs"],
        "summary": "Update pack (retire/change status)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updatePacks"
      }
    },
    "/packs/{packId}/openings": {
      "post": {
        "tags": ["Packs"],
        "summary": "Open a pack",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackOpeningRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackOpening"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createPacksOpenings"
      }
    },
    "/pack-openings/{packOpeningId}": {
      "get": {
        "tags": ["Packs"],
        "summary": "Get pack opening",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackOpeningId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackOpening"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getPackOpenings"
      }
    },
    "/trades": {
      "get": {
        "tags": ["Trades"],
        "summary": "List trades",
        "parameters": [
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TradeListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTrades"
      },
      "post": {
        "tags": ["Trades"],
        "summary": "Create trade",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTrades"
      }
    },
    "/trades/{tradeId}": {
      "get": {
        "tags": ["Trades"],
        "summary": "Get trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTradeById"
      }
    },
    "/trades/{tradeId}/accept": {
      "post": {
        "tags": ["Trades"],
        "summary": "Accept trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTradesAccept"
      }
    },
    "/trades/{tradeId}/decline": {
      "post": {
        "tags": ["Trades"],
        "summary": "Decline trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTradesDecline"
      }
    },
    "/trades/{tradeId}/cancel": {
      "post": {
        "tags": ["Trades"],
        "summary": "Cancel trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTradesCancel"
      }
    },
    "/purchase-orders": {
      "get": {
        "tags": ["PurchaseOrders"],
        "summary": "List purchase orders",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PurchaseOrderListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listPurchaseOrders"
      },
      "post": {
        "tags": ["PurchaseOrders"],
        "summary": "Create purchase order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createPurchaseOrders"
      }
    },
    "/purchase-orders/{orderId}": {
      "get": {
        "tags": ["PurchaseOrders"],
        "summary": "Get purchase order",
        "parameters": [
          {
            "$ref": "#/components/parameters/OrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getPurchaseOrderById"
      }
    },
    "/tournaments": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "List tournaments",
        "responses": {
          "200": {
            "$ref": "#/components/responses/TournamentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTournaments"
      },
      "post": {
        "tags": ["Tournaments"],
        "summary": "Create tournament",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournaments"
      }
    },
    "/tournaments/{tournamentId}": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "Get tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTournamentById"
      },
      "patch": {
        "tags": ["Tournaments"],
        "summary": "Update tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateTournaments"
      }
    },
    "/tournaments/{tournamentId}/publish": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Publish tournament (REG_OPEN)",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournamentsPublish"
      }
    },
    "/tournaments/{tournamentId}/start": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Start tournament (IN_PROGRESS)",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournamentsStart"
      }
    },
    "/tournaments/{tournamentId}/complete": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Complete tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournamentsComplete"
      }
    },
    "/tournaments/{tournamentId}/cancel": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Cancel tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournamentsCancel"
      }
    },
    "/tournaments/{tournamentId}/results": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "List tournament results",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TournamentResultListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTournamentsResults"
      },
      "post": {
        "tags": ["Tournaments"],
        "summary": "Submit tournament result",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentResultCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournamentsResults"
      }
    },
    "/league-seasons": {
      "get": {
        "tags": ["League"],
        "summary": "List league seasons",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeagueSeasonListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listLeagueSeasons"
      },
      "post": {
        "tags": ["League"],
        "summary": "Create league season",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeagueSeasonCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueSeason"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createLeagueSeasons"
      }
    },
    "/league-seasons/{leagueSeasonId}": {
      "get": {
        "tags": ["League"],
        "summary": "Get league season",
        "parameters": [
          {
            "$ref": "#/components/parameters/LeagueSeasonId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueSeason"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getLeagueSeasonById"
      },
      "patch": {
        "tags": ["League"],
        "summary": "Update league season",
        "parameters": [
          {
            "$ref": "#/components/parameters/LeagueSeasonId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeagueSeasonUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueSeason"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateLeagueSeasons"
      }
    },
    "/league-seasons/{leagueSeasonId}/standings": {
      "get": {
        "tags": ["League"],
        "summary": "Get season standings",
        "parameters": [
          {
            "$ref": "#/components/parameters/LeagueSeasonId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeagueStandingListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getLeagueSeasonsStandings"
      }
    },
    "/events": {
      "get": {
        "tags": ["Events"],
        "summary": "List events",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listEvents"
      },
      "post": {
        "tags": ["Events"],
        "summary": "Create event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEvents"
      }
    },
    "/events/{eventId}": {
      "get": {
        "tags": ["Events"],
        "summary": "Get event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getEventById"
      },
      "patch": {
        "tags": ["Events"],
        "summary": "Update event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateEvents"
      }
    },
    "/events/{eventId}/schedule": {
      "post": {
        "tags": ["Events"],
        "summary": "Schedule event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEventsSchedule"
      }
    },
    "/events/{eventId}/cancel": {
      "post": {
        "tags": ["Events"],
        "summary": "Cancel event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEventsCancel"
      }
    },
    "/events/{eventId}/participations": {
      "get": {
        "tags": ["Events"],
        "summary": "List participations",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventParticipationListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getEventsParticipations"
      },
      "post": {
        "tags": ["Events"],
        "summary": "Register participation",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventParticipationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEventsParticipations"
      }
    },
    "/event-participations/{participationId}": {
      "patch": {
        "tags": ["Events"],
        "summary": "Update participation status",
        "parameters": [
          {
            "$ref": "#/components/parameters/ParticipationId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventParticipationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateEventParticipations"
      }
    },
    "/sages": {
      "get": {
        "tags": ["Sages"],
        "summary": "List sages",
        "responses": {
          "200": {
            "$ref": "#/components/responses/SageListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listSages"
      },
      "post": {
        "tags": ["Sages"],
        "summary": "Create sage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SageCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createSages"
      }
    },
    "/sages/{sageId}": {
      "get": {
        "tags": ["Sages"],
        "summary": "Get sage",
        "parameters": [
          {
            "$ref": "#/components/parameters/SageId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getSageById"
      },
      "patch": {
        "tags": ["Sages"],
        "summary": "Update sage",
        "parameters": [
          {
            "$ref": "#/components/parameters/SageId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateSages"
      }
    },
    "/card-ownerships/{ownershipId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card ownership record",
        "parameters": [{ "$ref": "#/components/parameters/OwnershipId" }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardOwnership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCardOwnershipById"
      }
    },
    "/league-standings/{standingId}": {
      "get": {
        "tags": ["League"],
        "summary": "Get league standing",
        "parameters": [{ "$ref": "#/components/parameters/StandingId" }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueStanding"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getLeagueStandingsById"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "PageSizeParam": {
        "name": "pageSize",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "AcademyId": {
        "name": "academyId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "StoreId": {
        "name": "storeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "BattleStationId": {
        "name": "battleStationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "RuleSetId": {
        "name": "ruleSetId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "EntitlementProfileId": {
        "name": "entitlementProfileId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CurrencyId": {
        "name": "currencyId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CurrencyAccountId": {
        "name": "currencyAccountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CollectorId": {
        "name": "collectorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TeamId": {
        "name": "teamId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TeamMembershipId": {
        "name": "teamMembershipId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "AetherbotId": {
        "name": "aetherbotId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CardId": {
        "name": "cardId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "HousingPlanId": {
        "name": "housingPlanId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "HousingAssignmentId": {
        "name": "assignmentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "AssignmentId": {
        "name": "assignmentId",
        "in": "path",
        "required": true,
        "schema": { "type": "string", "format": "uuid" }
      },
      "AllowancePlanId": {
        "name": "allowancePlanId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "AllowanceEnrollmentId": {
        "name": "enrollmentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "EnrollmentId": {
        "name": "enrollmentId",
        "in": "path",
        "required": true,
        "schema": { "type": "string", "format": "uuid" }
      },
      "InventoryItemId": {
        "name": "inventoryItemId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "PackId": {
        "name": "packId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "PackOpeningId": {
        "name": "packOpeningId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TradeId": {
        "name": "tradeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "OrderId": {
        "name": "orderId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TournamentId": {
        "name": "tournamentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "LeagueSeasonId": {
        "name": "leagueSeasonId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "EventId": {
        "name": "eventId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "ParticipationId": {
        "name": "participationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "SageId": {
        "name": "sageId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "OwnershipId": {
        "name": "ownershipId",
        "in": "path",
        "required": true,
        "schema": { "type": "string", "format": "uuid" }
      },
      "StandingId": {
        "name": "standingId",
        "in": "path",
        "required": true,
        "schema": { "type": "string", "format": "uuid" }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationErrorResponse"
            }
          }
        }
      },
      "RateLimited": {
        "description": "Too many requests",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "InternalError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "AcademyListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AcademyListEnvelope"
            }
          }
        }
      },
      "StoreListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StoreListEnvelope"
            }
          }
        }
      },
      "BattleStationListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BattleStationListEnvelope"
            }
          }
        }
      },
      "RuleSetListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleSetListEnvelope"
            }
          }
        }
      },
      "EntitlementProfileListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EntitlementProfileListEnvelope"
            }
          }
        }
      },
      "CurrencyListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CurrencyListEnvelope"
            }
          }
        }
      },
      "CurrencyAccountListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CurrencyAccountListEnvelope"
            }
          }
        }
      },
      "CardCollectorListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CardCollectorListEnvelope"
            }
          }
        }
      },
      "TeamListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TeamListEnvelope"
            }
          }
        }
      },
      "TeamMembershipListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TeamMembershipListEnvelope"
            }
          }
        }
      },
      "AetherbotListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AetherbotListEnvelope"
            }
          }
        }
      },
      "AetherbotCardListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AetherbotCardListEnvelope"
            }
          }
        }
      },
      "CardOwnershipListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CardOwnershipListEnvelope"
            }
          }
        }
      },
      "HousingPlanListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HousingPlanListEnvelope"
            }
          }
        }
      },
      "HousingAssignmentListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HousingAssignmentListEnvelope"
            }
          }
        }
      },
      "AllowancePlanListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AllowancePlanListEnvelope"
            }
          }
        }
      },
      "AllowanceEnrollmentListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AllowanceEnrollmentListEnvelope"
            }
          }
        }
      },
      "InventoryItemListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InventoryItemListEnvelope"
            }
          }
        }
      },
      "PackListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PackListEnvelope"
            }
          }
        }
      },
      "TradeListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TradeListEnvelope"
            }
          }
        }
      },
      "PurchaseOrderListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PurchaseOrderListEnvelope"
            }
          }
        }
      },
      "TournamentListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TournamentListEnvelope"
            }
          }
        }
      },
      "TournamentResultListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TournamentResultListEnvelope"
            }
          }
        }
      },
      "LeagueSeasonListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LeagueSeasonListEnvelope"
            }
          }
        }
      },
      "LeagueStandingListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LeagueStandingListEnvelope"
            }
          }
        }
      },
      "EventListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventListEnvelope"
            }
          }
        }
      },
      "EventParticipationListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventParticipationListEnvelope"
            }
          }
        }
      },
      "SageListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SageListEnvelope"
            }
          }
        }
      }
    },
    "schemas": {
      "PageMetadata": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "NOT_FOUND",
              "VALIDATION_ERROR",
              "CONFLICT",
              "FORBIDDEN",
              "UNAUTHORIZED",
              "RATE_LIMITED",
              "INTERNAL_ERROR"
            ]
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "FieldError": {
        "type": "object",
        "required": ["field", "message"],
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "fieldErrors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldError"
                }
              }
            }
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ValidationError"
          }
        }
      },
      "AcademyListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Academy"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "StoreListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "BattleStationListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BattleStation"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "RuleSetListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EntitlementProfileListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitlementProfile"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CurrencyListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CurrencyAccountListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyAccount"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CardCollectorListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardCollector"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TeamListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TeamMembershipListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamMembership"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AetherbotListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aetherbot"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AetherbotCardListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AetherbotCard"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CardOwnershipListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardOwnership"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "HousingPlanListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HousingPlan"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "HousingAssignmentListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HousingAssignment"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AllowancePlanListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowancePlan"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AllowanceEnrollmentListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowanceEnrollment"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "InventoryItemListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "PackListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pack"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TradeListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trade"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "PurchaseOrderListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrder"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TournamentListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tournament"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TournamentResultListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentResult"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "LeagueSeasonListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueSeason"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "LeagueStandingListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueStanding"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EventListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EventParticipationListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventParticipation"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "SageListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sage"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AcademyBase": {
        "type": "object",
        "required": ["name", "region", "timezone"],
        "properties": {
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Academy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AcademyBase"
          },
          {
            "type": "object",
            "required": ["academyId", "status", "createdAt"],
            "properties": {
              "academyId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": ["ACTIVE", "INACTIVE"]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "AcademyCreate": {
        "$ref": "#/components/schemas/AcademyBase"
      },
      "AcademyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        }
      },
      "Store": {
        "type": "object",
        "required": ["storeId", "academyId", "name", "status", "createdAt"],
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "inventoryPolicy": {
            "type": "string"
          },
          "defaultCurrencyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StoreCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "inventoryPolicy": {
            "type": "string"
          },
          "defaultCurrencyId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "StoreUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "inventoryPolicy": {
            "type": "string"
          },
          "defaultCurrencyId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        }
      },
      "BattleStation": {
        "type": "object",
        "required": ["battleStationId", "academyId", "stationKey", "status"],
        "properties": {
          "battleStationId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stationCode": {
            "type": "string",
            "nullable": true
          },
          "stationKey": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISABLED", "MAINTENANCE"]
          },
          "systemManaged": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "locationHint": {
            "type": "string",
            "nullable": true
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entitlementProfileId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ruleSetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "effectiveRuleSetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "effectiveRuleSetSource": {
            "type": "string",
            "enum": ["INLINE", "ACADEMY", "STORE", "GLOBAL"],
            "nullable": true
          },
          "supportedCurrencyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "allowOfflineQueue": {
            "type": "boolean",
            "nullable": true
          },
          "lastHeartbeatAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BattleStationCreate": {
        "type": "object",
        "required": ["academyId", "stationKey"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "stationKey": {
            "type": "string"
          },
          "stationCode": {
            "type": "string"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BattleStationUpdate": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entitlementProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "ruleSetId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISABLED", "MAINTENANCE"]
          }
        }
      },
      "RuleSet": {
        "type": "object",
        "required": ["ruleSetId", "name", "scope", "version", "status"],
        "properties": {
          "ruleSetId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": ["GLOBAL", "ACADEMY", "STORE", "STATION"]
          },
          "version": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "DEPRECATED"]
          },
          "data": {
            "type": "object"
          },
          "effectiveFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RuleSetCreate": {
        "type": "object",
        "required": ["name", "scope", "data"],
        "properties": {
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": ["GLOBAL", "ACADEMY", "STORE", "STATION"]
          },
          "data": {
            "type": "object"
          }
        }
      },
      "RuleSetUpdate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "DEPRECATED"]
          }
        }
      },
      "EntitlementProfile": {
        "type": "object",
        "required": ["entitlementProfileId", "name", "status"],
        "properties": {
          "entitlementProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntitlementProfileCreate": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntitlementProfileUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        }
      },
      "Currency": {
        "type": "object",
        "required": [
          "currencyId",
          "academyId",
          "code",
          "name",
          "decimals",
          "activeFlag"
        ],
        "properties": {
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "decimals": {
            "type": "integer"
          },
          "activeFlag": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CurrencyCreate": {
        "type": "object",
        "required": ["academyId", "code", "name", "decimals"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "decimals": {
            "type": "integer"
          }
        }
      },
      "CurrencyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "activeFlag": {
            "type": "boolean"
          }
        }
      },
      "CurrencyAccount": {
        "type": "object",
        "required": [
          "currencyAccountId",
          "collectorId",
          "currencyId",
          "balance",
          "reservedBalance"
        ],
        "properties": {
          "currencyAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "balance": {
            "type": "number"
          },
          "reservedBalance": {
            "type": "number"
          },
          "lastTransactionAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CurrencyAccountCreate": {
        "type": "object",
        "required": ["collectorId", "currencyId"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CardCollector": {
        "type": "object",
        "required": [
          "collectorId",
          "handle",
          "displayName",
          "joinDate",
          "status"
        ],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "handle": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time"
          },
          "rank": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "SUSPENDED", "RETIRED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CardCollectorCreate": {
        "type": "object",
        "required": ["handle", "displayName"],
        "properties": {
          "handle": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "CardCollectorUpdate": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "SUSPENDED", "RETIRED"]
          }
        }
      },
      "Team": {
        "type": "object",
        "required": ["teamId", "academyId", "name", "memberCount", "status"],
        "properties": {
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "formedDate": {
            "type": "string",
            "format": "date-time"
          },
          "memberCount": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISBANDED", "ARCHIVED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TeamCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TeamUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISBANDED", "ARCHIVED"]
          }
        }
      },
      "TeamMembership": {
        "type": "object",
        "required": [
          "teamMembershipId",
          "teamId",
          "collectorId",
          "role",
          "joinedDate",
          "activeFlag"
        ],
        "properties": {
          "teamMembershipId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["CAPTAIN", "MEMBER"]
          },
          "joinedDate": {
            "type": "string",
            "format": "date-time"
          },
          "activeFlag": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TeamMembershipCreate": {
        "type": "object",
        "required": ["collectorId", "role"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["CAPTAIN", "MEMBER"]
          }
        }
      },
      "TeamMembershipUpdate": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": ["CAPTAIN", "MEMBER"]
          },
          "activeFlag": {
            "type": "boolean"
          }
        }
      },
      "Aetherbot": {
        "type": "object",
        "required": ["aetherbotId", "slug", "label", "rarity"],
        "properties": {
          "aetherbotId": {
            "type": "string",
            "format": "uuid"
          },
          "slug": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"]
          },
          "element": {
            "type": "string"
          },
          "emotion": {
            "type": "string"
          },
          "habitat": {
            "type": "string"
          },
          "stats": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "lore": {
            "type": "object"
          }
        }
      },
      "AetherbotCreate": {
        "type": "object",
        "required": ["slug", "label", "rarity"],
        "properties": {
          "slug": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"]
          },
          "role": {
            "type": "string"
          },
          "element": {
            "type": "string"
          },
          "emotion": {
            "type": "string"
          },
          "habitat": {
            "type": "string"
          },
          "stats": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "lore": {
            "type": "object"
          }
        }
      },
      "AetherbotCard": {
        "type": "object",
        "required": [
          "cardId",
          "aetherbotId",
          "rarity",
          "acquisitionDate",
          "acquisitionType",
          "status"
        ],
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "aetherbotId": {
            "type": "string",
            "format": "uuid"
          },
          "currentOwnerCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "edition": {
            "type": "string"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"]
          },
          "mintNumber": {
            "type": "integer"
          },
          "grade": {
            "type": "string",
            "nullable": true
          },
          "acquisitionDate": {
            "type": "string",
            "format": "date-time"
          },
          "acquisitionType": {
            "type": "string",
            "enum": ["PACK", "TRADE", "PURCHASE", "REWARD"]
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "LOCKED", "BURNED"]
          },
          "provenanceRef": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CardOwnership": {
        "type": "object",
        "required": [
          "ownershipId",
          "cardId",
          "ownerCollectorId",
          "acquiredDate",
          "acquisitionType"
        ],
        "properties": {
          "ownershipId": {
            "type": "string",
            "format": "uuid"
          },
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "ownerCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "acquiredDate": {
            "type": "string",
            "format": "date-time"
          },
          "acquisitionType": {
            "type": "string",
            "enum": ["PACK", "TRADE", "PURCHASE", "REWARD"]
          },
          "relinquishedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transferEventType": {
            "type": "string",
            "enum": ["TRADE", "PURCHASE", "PACK", "REWARD"],
            "nullable": true
          }
        }
      },
      "HousingPlan": {
        "type": "object",
        "required": [
          "housingPlanId",
          "academyId",
          "name",
          "capacityType",
          "status",
          "startDate"
        ],
        "properties": {
          "housingPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capacityType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingPlanCreate": {
        "type": "object",
        "required": ["academyId", "name", "capacityType", "startDate"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capacityType": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingPlanUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingAssignment": {
        "type": "object",
        "required": [
          "assignmentId",
          "housingPlanId",
          "collectorId",
          "startDate",
          "status"
        ],
        "properties": {
          "assignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "housingPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingAssignmentCreate": {
        "type": "object",
        "required": ["collectorId", "startDate"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingAssignmentUpdate": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "cancellationReason": {
            "type": "string"
          }
        }
      },
      "AllowancePlan": {
        "type": "object",
        "required": [
          "allowancePlanId",
          "academyId",
          "name",
          "cycle",
          "creditAmount",
          "type",
          "status",
          "startDate"
        ],
        "properties": {
          "allowancePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "cycle": {
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "SEASON"]
          },
          "creditAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": ["NUTRITION", "ENERGY", "FOCUS"]
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowancePlanCreate": {
        "type": "object",
        "required": [
          "academyId",
          "name",
          "cycle",
          "creditAmount",
          "type",
          "startDate"
        ],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "cycle": {
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "SEASON"]
          },
          "creditAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": ["NUTRITION", "ENERGY", "FOCUS"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowancePlanUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowanceEnrollment": {
        "type": "object",
        "required": [
          "enrollmentId",
          "allowancePlanId",
          "collectorId",
          "startDate",
          "status"
        ],
        "properties": {
          "enrollmentId": {
            "type": "string",
            "format": "uuid"
          },
          "allowancePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remainingCredits": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowanceEnrollmentCreate": {
        "type": "object",
        "required": ["collectorId", "startDate"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowanceEnrollmentUpdate": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          }
        }
      },
      "InventoryItem": {
        "type": "object",
        "required": [
          "inventoryItemId",
          "storeId",
          "quantityAvailable",
          "priceCurrencyUnits",
          "createdAt"
        ],
        "properties": {
          "inventoryItemId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "cardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "aetherbotId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "quantityAvailable": {
            "type": "integer"
          },
          "reservedQuantity": {
            "type": "integer"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"],
            "nullable": true
          },
          "edition": {
            "type": "string",
            "nullable": true
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InventoryItemCreate": {
        "type": "object",
        "required": ["storeId", "quantityAvailable", "priceCurrencyUnits"],
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "quantityAvailable": {
            "type": "integer"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "aetherbotId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "InventoryItemUpdate": {
        "type": "object",
        "properties": {
          "quantityAvailable": {
            "type": "integer"
          },
          "reservedQuantity": {
            "type": "integer"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time"
          },
          "availableTo": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pack": {
        "type": "object",
        "required": [
          "packId",
          "name",
          "edition",
          "rarityMix",
          "priceCurrencyUnits",
          "status"
        ],
        "properties": {
          "packId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "rarityMix": {
            "type": "object",
            "additionalProperties": true
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "RETIRED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PackCreate": {
        "type": "object",
        "required": ["name", "edition", "rarityMix", "priceCurrencyUnits"],
        "properties": {
          "name": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "rarityMix": {
            "type": "object",
            "additionalProperties": true
          },
          "priceCurrencyUnits": {
            "type": "number"
          }
        }
      },
      "PackUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "RETIRED"]
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time"
          },
          "availableTo": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PackOpeningRequest": {
        "type": "object",
        "required": ["collectorId"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "battleStationId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PackOpening": {
        "type": "object",
        "required": [
          "packOpeningId",
          "packId",
          "collectorId",
          "openedDateTime"
        ],
        "properties": {
          "packOpeningId": {
            "type": "string",
            "format": "uuid"
          },
          "packId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "battleStationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "openedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "resultingCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "randomnessProof": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Trade": {
        "type": "object",
        "required": [
          "tradeId",
          "fromCollectorId",
          "toCollectorId",
          "status",
          "createdDateTime"
        ],
        "properties": {
          "tradeId": {
            "type": "string",
            "format": "uuid"
          },
          "fromCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "toCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "offeredCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "requestedCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "DECLINED", "CANCELLED", "SETTLED"]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TradeCreate": {
        "type": "object",
        "required": [
          "fromCollectorId",
          "toCollectorId",
          "offeredCardIds",
          "requestedCardIds"
        ],
        "properties": {
          "fromCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "toCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "offeredCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "requestedCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "PurchaseOrder": {
        "type": "object",
        "required": [
          "orderId",
          "storeId",
          "collectorId",
          "totalCurrencyAmount",
          "status",
          "createdAt"
        ],
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "totalCurrencyAmount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "COMPLETED", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "lineItemId",
                "productType",
                "productId",
                "quantity",
                "unitPrice",
                "extendedPrice"
              ],
              "properties": {
                "lineItemId": {
                  "type": "string",
                  "format": "uuid"
                },
                "productType": {
                  "type": "string",
                  "enum": ["PACK", "CARD"]
                },
                "productId": {
                  "type": "string",
                  "format": "uuid"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number"
                },
                "extendedPrice": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "PurchaseOrderCreate": {
        "type": "object",
        "required": [
          "storeId",
          "collectorId",
          "currencyAccountId",
          "lineItems"
        ],
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["productType", "productId", "quantity"],
              "properties": {
                "productType": {
                  "type": "string",
                  "enum": ["PACK", "CARD"]
                },
                "productId": {
                  "type": "string",
                  "format": "uuid"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Tournament": {
        "type": "object",
        "required": [
          "tournamentId",
          "academyId",
          "name",
          "seasonYear",
          "type",
          "status",
          "startDate",
          "endDate"
        ],
        "properties": {
          "tournamentId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "seasonYear": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["MAJOR_A", "MAJOR_B"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "REG_OPEN",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TournamentCreate": {
        "type": "object",
        "required": [
          "academyId",
          "name",
          "seasonYear",
          "type",
          "startDate",
          "endDate"
        ],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "seasonYear": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["MAJOR_A", "MAJOR_B"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TournamentUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "REG_OPEN",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ]
          }
        }
      },
      "TournamentResult": {
        "type": "object",
        "required": ["resultId", "tournamentId", "teamId", "placement"],
        "properties": {
          "resultId": {
            "type": "string",
            "format": "uuid"
          },
          "tournamentId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "placement": {
            "type": "integer"
          },
          "pointsAwarded": {
            "type": "integer"
          },
          "prizeAwardedRef": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TournamentResultCreate": {
        "type": "object",
        "required": ["teamId", "placement"],
        "properties": {
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "placement": {
            "type": "integer"
          },
          "pointsAwarded": {
            "type": "integer"
          },
          "prizeAwardedRef": {
            "type": "string"
          }
        }
      },
      "LeagueSeason": {
        "type": "object",
        "required": [
          "leagueSeasonId",
          "year",
          "divisionStructureVersion",
          "phase",
          "startDate",
          "endDate"
        ],
        "properties": {
          "leagueSeasonId": {
            "type": "string",
            "format": "uuid"
          },
          "year": {
            "type": "integer"
          },
          "divisionStructureVersion": {
            "type": "integer"
          },
          "phase": {
            "type": "string",
            "enum": ["PRESEASON", "ACTIVE", "OFFSEASON"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "standingsLockAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LeagueSeasonCreate": {
        "type": "object",
        "required": [
          "year",
          "divisionStructureVersion",
          "phase",
          "startDate",
          "endDate"
        ],
        "properties": {
          "year": {
            "type": "integer"
          },
          "divisionStructureVersion": {
            "type": "integer"
          },
          "phase": {
            "type": "string",
            "enum": ["PRESEASON", "ACTIVE", "OFFSEASON"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LeagueSeasonUpdate": {
        "type": "object",
        "properties": {
          "phase": {
            "type": "string",
            "enum": ["PRESEASON", "ACTIVE", "OFFSEASON"]
          },
          "standingsLockAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LeagueStanding": {
        "type": "object",
        "required": [
          "standingId",
          "leagueSeasonId",
          "teamId",
          "division",
          "wins",
          "losses",
          "rating"
        ],
        "properties": {
          "standingId": {
            "type": "string",
            "format": "uuid"
          },
          "leagueSeasonId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "division": {
            "type": "string",
            "enum": ["DIV1", "DIV2", "DIV3"]
          },
          "wins": {
            "type": "integer"
          },
          "losses": {
            "type": "integer"
          },
          "rating": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Event": {
        "type": "object",
        "required": [
          "eventId",
          "academyId",
          "type",
          "topic",
          "startDateTime",
          "endDateTime",
          "status"
        ],
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": ["LECTURE", "TRAINING"]
          },
          "topic": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "capacity": {
            "type": "integer"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SCHEDULED",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventCreate": {
        "type": "object",
        "required": [
          "academyId",
          "type",
          "topic",
          "startDateTime",
          "endDateTime"
        ],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": ["LECTURE", "TRAINING"]
          },
          "topic": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventUpdate": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SCHEDULED",
              "IN_PROGRESS",
              "COMPLETED",
              "CANCELLED"
            ]
          }
        }
      },
      "EventParticipation": {
        "type": "object",
        "required": [
          "participationId",
          "eventId",
          "collectorId",
          "role",
          "status"
        ],
        "properties": {
          "participationId": {
            "type": "string",
            "format": "uuid"
          },
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["ATTENDEE", "ASSISTANT"]
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "WAITLIST",
              "ATTENDED",
              "NO_SHOW",
              "CANCELLED"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventParticipationCreate": {
        "type": "object",
        "required": ["collectorId", "role"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["ATTENDEE", "ASSISTANT"]
          }
        }
      },
      "EventParticipationUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "WAITLIST",
              "ATTENDED",
              "NO_SHOW",
              "CANCELLED"
            ]
          }
        }
      },
      "Sage": {
        "type": "object",
        "required": ["sageId", "academyId", "name"],
        "properties": {
          "sageId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "specialtyElement": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      },
      "SageCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SageUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "specialtyElement": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      }
    }
  }
}
