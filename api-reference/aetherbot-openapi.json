{
  "openapi": "3.0.3",
  "info": {
    "title": "Synthetic Aetherbot Domain API",
    "version": "0.2.0",
    "description": "Expanded synthetic domain contract with full CRUD/read patterns, pagination envelopes, standardized error model, action endpoints, and security for academies, stores, collectors, teams & memberships, battle stations, rule sets, entitlement profiles, currencies & accounts, catalog & cards, housing & allowance plans, inventory, packs & openings, trades, purchase orders, tournaments & results, league seasons & standings, events & participations, and sages.\n\nSoft delete: Resources that support lifecycle state transitions expose a 'status' (e.g. ACTIVE, INACTIVE, ARCHIVED) rather than a hard DELETE operation in this version. DELETE endpoints are intentionally omitted in favor of explicit status transitions; future iterations may add DELETE once retention policies are finalized.",
    "license": {
      "name": "Creative Commons Attribution 4.0 International",
      "url": "https://creativecommons.org/licenses/by/4.0/"
    }
  },
  "servers": [
    {
      "url": "https://api.aetherbot.io/v1",
      "description": "Primary production environment"
    }
  ],
  "tags": [
    {
      "name": "Academies",
      "description": "Academy management and lifecycle operations"
    },
    {
      "name": "Stores",
      "description": "Retail store catalog and state changes"
    },
    {
      "name": "Collectors",
      "description": "Collector profiles, preferences, and account links"
    },
    {
      "name": "Teams",
      "description": "Team creation, membership, and roster management"
    },
    {
      "name": "BattleStations",
      "description": "Battle station configuration and availability"
    },
    {
      "name": "RuleSets",
      "description": "Gameplay rule set definitions and revisions"
    },
    {
      "name": "EntitlementProfiles",
      "description": "Entitlement profile templates and assignments"
    },
    {
      "name": "Currencies",
      "description": "Virtual currencies and denomination management"
    },
    {
      "name": "CurrencyAccounts",
      "description": "Currency account balances and transactions"
    },
    {
      "name": "Catalog",
      "description": "Storefront catalog listings and categories"
    },
    {
      "name": "Cards",
      "description": "Collectible card metadata and ownership"
    },
    {
      "name": "Housing",
      "description": "Housing plans, units, and assignments"
    },
    {
      "name": "Allowance",
      "description": "Allowance plan configuration and enrollment"
    },
    {
      "name": "Inventory",
      "description": "Inventory items and collector holdings"
    },
    {
      "name": "Packs",
      "description": "Pack definitions, openings, and contents"
    },
    {
      "name": "Trades",
      "description": "Collector trade proposals and lifecycle"
    },
    {
      "name": "PurchaseOrders",
      "description": "Purchase order submission and fulfillment"
    },
    {
      "name": "Tournaments",
      "description": "Tournament scheduling, registration, and results"
    },
    {
      "name": "League",
      "description": "League season structures and standings"
    },
    {
      "name": "Events",
      "description": "Event programming and participation tracking"
    },
    {
      "name": "Sages",
      "description": "Sage NPC definitions and interactions"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/academies": {
      "get": {
        "tags": ["Academies"],
        "summary": "List academies",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AcademyListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAcademies"
      },
      "post": {
        "tags": ["Academies"],
        "summary": "Create academy",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcademyCreate"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/AcademyCreateExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Academy"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/AcademyResponseExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAcademy"
      }
    },
    "/academies/{academyId}": {
      "get": {
        "tags": ["Academies"],
        "summary": "Get academy",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcademyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Academy"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAcademy"
      },
      "patch": {
        "tags": ["Academies"],
        "summary": "Update academy",
        "parameters": [
          {
            "$ref": "#/components/parameters/AcademyId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcademyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Academy"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateAcademy"
      }
    },
    "/stores": {
      "get": {
        "tags": ["Stores"],
        "summary": "List stores",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StoreListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listStores"
      },
      "post": {
        "tags": ["Stores"],
        "summary": "Create store",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createStore"
      }
    },
    "/stores/{storeId}": {
      "get": {
        "tags": ["Stores"],
        "summary": "Get store",
        "parameters": [
          {
            "$ref": "#/components/parameters/StoreId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getStore"
      },
      "patch": {
        "tags": ["Stores"],
        "summary": "Update store",
        "parameters": [
          {
            "$ref": "#/components/parameters/StoreId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateStore"
      }
    },
    "/battle-stations": {
      "get": {
        "tags": ["BattleStations"],
        "summary": "List battle stations",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/BattleStationListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listBattleStations"
      },
      "post": {
        "tags": ["BattleStations"],
        "summary": "Create battle station",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BattleStationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BattleStation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createBattleStation"
      }
    },
    "/battle-stations/{battleStationId}": {
      "get": {
        "tags": ["BattleStations"],
        "summary": "Get battle station",
        "parameters": [
          {
            "$ref": "#/components/parameters/BattleStationId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BattleStation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getBattleStation"
      },
      "patch": {
        "tags": ["BattleStations"],
        "summary": "Update battle station",
        "parameters": [
          {
            "$ref": "#/components/parameters/BattleStationId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BattleStationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BattleStation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateBattleStation"
      }
    },
    "/rule-sets": {
      "get": {
        "tags": ["RuleSets"],
        "summary": "List rule sets",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/RuleSetListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listRuleSets"
      },
      "post": {
        "tags": ["RuleSets"],
        "summary": "Create rule set",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleSetCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createRuleSet"
      }
    },
    "/rule-sets/{ruleSetId}": {
      "get": {
        "tags": ["RuleSets"],
        "summary": "Get rule set",
        "parameters": [
          {
            "$ref": "#/components/parameters/RuleSetId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getRuleSet"
      },
      "patch": {
        "tags": ["RuleSets"],
        "summary": "Update rule set",
        "parameters": [
          {
            "$ref": "#/components/parameters/RuleSetId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleSetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleSet"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateRuleSet"
      }
    },
    "/entitlement-profiles": {
      "get": {
        "tags": ["EntitlementProfiles"],
        "summary": "List entitlement profiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntitlementProfileListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listEntitlementProfiles"
      },
      "post": {
        "tags": ["EntitlementProfiles"],
        "summary": "Create entitlement profile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitlementProfileCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEntitlementProfile"
      }
    },
    "/entitlement-profiles/{entitlementProfileId}": {
      "get": {
        "tags": ["EntitlementProfiles"],
        "summary": "Get entitlement profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/EntitlementProfileId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getEntitlementProfile"
      },
      "patch": {
        "tags": ["EntitlementProfiles"],
        "summary": "Update entitlement profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/EntitlementProfileId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitlementProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitlementProfile"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateEntitlementProfile"
      }
    },
    "/currencies": {
      "get": {
        "tags": ["Currencies"],
        "summary": "List currencies",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CurrencyListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCurrencies"
      },
      "post": {
        "tags": ["Currencies"],
        "summary": "Create currency",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCreate"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/CurrencyCreateExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/CurrencyResponseExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createCurrency"
      }
    },
    "/currencies/{currencyId}": {
      "get": {
        "tags": ["Currencies"],
        "summary": "Get currency",
        "parameters": [
          {
            "$ref": "#/components/parameters/CurrencyId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCurrency"
      },
      "patch": {
        "tags": ["Currencies"],
        "summary": "Update currency",
        "parameters": [
          {
            "$ref": "#/components/parameters/CurrencyId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateCurrency"
      }
    },
    "/currency-accounts": {
      "get": {
        "tags": ["CurrencyAccounts"],
        "summary": "List currency accounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CurrencyAccountListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCurrencyAccounts"
      },
      "post": {
        "tags": ["CurrencyAccounts"],
        "summary": "Create currency account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyAccountCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createCurrencyAccount"
      }
    },
    "/currency-accounts/{currencyAccountId}": {
      "get": {
        "tags": ["CurrencyAccounts"],
        "summary": "Get currency account",
        "parameters": [
          {
            "$ref": "#/components/parameters/CurrencyAccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyAccount"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCurrencyAccount"
      }
    },
    "/card-collectors": {
      "get": {
        "tags": ["Collectors"],
        "summary": "List card collectors",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardCollectorListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCardCollectors"
      },
      "post": {
        "tags": ["Collectors"],
        "summary": "Register card collector",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardCollectorCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardCollector"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createCardCollector"
      }
    },
    "/card-collectors/summary": {
      "get": {
        "tags": ["Collectors"],
        "summary": "List card collector summaries",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardCollectorSummaryListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCardCollectorSummaries"
      }
    },
    "/card-collectors/summary/academy/{academyId}": {
      "get": {
        "tags": ["Collectors"],
        "summary": "List card collector summaries for academy",
        "parameters": [
          {
            "name": "academyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardCollectorSummaryListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCardCollectorSummariesByAcademy"
      }
    },
    "/card-collectors/{collectorId}": {
      "get": {
        "tags": ["Collectors"],
        "summary": "Get card collector",
        "parameters": [
          {
            "$ref": "#/components/parameters/CollectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardCollector"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCardCollector"
      },
      "patch": {
        "tags": ["Collectors"],
        "summary": "Update card collector profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/CollectorId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardCollectorUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardCollector"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateCardCollector"
      }
    },
    "/teams": {
      "get": {
        "tags": ["Teams"],
        "summary": "List teams",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TeamListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTeams"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Create team",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/TeamCreateExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/TeamResponseExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTeam"
      }
    },
    "/teams/{teamId}": {
      "get": {
        "tags": ["Teams"],
        "summary": "Get team",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTeam"
      },
      "patch": {
        "tags": ["Teams"],
        "summary": "Update team",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateTeam"
      }
    },
    "/teams/{teamId}/members": {
      "get": {
        "tags": ["Teams"],
        "summary": "List team memberships",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TeamMembershipListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTeamMembers"
      },
      "post": {
        "tags": ["Teams"],
        "summary": "Add team member",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMembershipCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMembership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "addTeamMember"
      }
    },
    "/teams/{teamId}/members/{teamMembershipId}": {
      "patch": {
        "tags": ["Teams"],
        "summary": "Update membership (role / activeFlag)",
        "parameters": [
          {
            "$ref": "#/components/parameters/TeamId"
          },
          {
            "$ref": "#/components/parameters/TeamMembershipId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamMembershipUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamMembership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateTeamMembership"
      }
    },
    "/aetherbots": {
      "get": {
        "tags": ["Catalog"],
        "summary": "List aetherbots",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AetherbotListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAetherbots"
      },
      "post": {
        "tags": ["Catalog"],
        "summary": "Create aetherbot (immutable after creation)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AetherbotCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aetherbot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAetherbot"
      }
    },
    "/aetherbots/{aetherbotId}": {
      "get": {
        "tags": ["Catalog"],
        "summary": "Get aetherbot",
        "parameters": [
          {
            "$ref": "#/components/parameters/AetherbotId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Aetherbot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAetherbot"
      }
    },
    "/aetherbot-cards": {
      "get": {
        "tags": ["Cards"],
        "summary": "List cards",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "ownerCollectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AetherbotCardListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAetherbotCards"
      }
    },
    "/aetherbot-cards/{cardId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card",
        "parameters": [
          {
            "$ref": "#/components/parameters/CardId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AetherbotCard"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAetherbotCard"
      }
    },
    "/aetherbot-cards/{cardId}/ownerships": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card ownership history",
        "parameters": [
          {
            "$ref": "#/components/parameters/CardId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardOwnershipListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCardOwnershipsByCard"
      }
    },
    "/housing-plans": {
      "get": {
        "tags": ["Housing"],
        "summary": "List housing plans",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HousingPlanListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listHousingPlans"
      },
      "post": {
        "tags": ["Housing"],
        "summary": "Create housing plan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingPlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingPlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createHousingPlan"
      }
    },
    "/housing-plans/{housingPlanId}": {
      "get": {
        "tags": ["Housing"],
        "summary": "Get housing plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingPlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getHousingPlan"
      },
      "patch": {
        "tags": ["Housing"],
        "summary": "Update housing plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingPlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingPlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateHousingPlan"
      }
    },
    "/housing-plans/{housingPlanId}/assignments": {
      "get": {
        "tags": ["Housing"],
        "summary": "List housing assignments for plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HousingAssignmentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listHousingAssignmentsForPlan"
      },
      "post": {
        "tags": ["Housing"],
        "summary": "Create housing assignment",
        "parameters": [
          {
            "$ref": "#/components/parameters/HousingPlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingAssignmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingAssignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createHousingAssignment"
      }
    },
    "/housing-assignments/{assignmentId}": {
      "patch": {
        "tags": ["Housing"],
        "summary": "Update housing assignment (end/cancel)",
        "parameters": [
          {
            "$ref": "#/components/parameters/AssignmentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HousingAssignmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HousingAssignment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateHousingAssignment"
      }
    },
    "/allowance-plans": {
      "get": {
        "tags": ["Allowance"],
        "summary": "List allowance plans",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowancePlanListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAllowancePlans"
      },
      "post": {
        "tags": ["Allowance"],
        "summary": "Create allowance plan",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowancePlanCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowancePlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAllowancePlan"
      }
    },
    "/allowance-plans/{allowancePlanId}": {
      "get": {
        "tags": ["Allowance"],
        "summary": "Get allowance plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowancePlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getAllowancePlan"
      },
      "patch": {
        "tags": ["Allowance"],
        "summary": "Update allowance plan",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowancePlanUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowancePlan"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateAllowancePlan"
      }
    },
    "/allowance-plans/{allowancePlanId}/enrollments": {
      "get": {
        "tags": ["Allowance"],
        "summary": "List allowance enrollments",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowanceEnrollmentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAllowanceEnrollmentsForPlan"
      },
      "post": {
        "tags": ["Allowance"],
        "summary": "Create enrollment",
        "parameters": [
          {
            "$ref": "#/components/parameters/AllowancePlanId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowanceEnrollmentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowanceEnrollment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createAllowanceEnrollment"
      }
    },
    "/allowance-enrollments/{enrollmentId}": {
      "patch": {
        "tags": ["Allowance"],
        "summary": "Update enrollment (end/cancel)",
        "parameters": [
          {
            "$ref": "#/components/parameters/EnrollmentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllowanceEnrollmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllowanceEnrollment"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateAllowanceEnrollment"
      }
    },
    "/inventory-items": {
      "get": {
        "tags": ["Inventory"],
        "summary": "List inventory items",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/InventoryItemListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listInventoryItems"
      },
      "post": {
        "tags": ["Inventory"],
        "summary": "Create inventory item",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createInventoryItem"
      }
    },
    "/inventory-items/{inventoryItemId}": {
      "get": {
        "tags": ["Inventory"],
        "summary": "Get inventory item",
        "parameters": [
          {
            "$ref": "#/components/parameters/InventoryItemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getInventoryItem"
      },
      "patch": {
        "tags": ["Inventory"],
        "summary": "Update inventory item",
        "parameters": [
          {
            "$ref": "#/components/parameters/InventoryItemId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItem"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateInventoryItem"
      }
    },
    "/packs": {
      "get": {
        "tags": ["Packs"],
        "summary": "List packs",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PackListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listPacks"
      },
      "post": {
        "tags": ["Packs"],
        "summary": "Create pack definition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createPack"
      }
    },
    "/packs/{packId}": {
      "get": {
        "tags": ["Packs"],
        "summary": "Get pack",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getPack"
      },
      "patch": {
        "tags": ["Packs"],
        "summary": "Update pack (retire/change status)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pack"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updatePack"
      }
    },
    "/packs/{packId}/openings": {
      "post": {
        "tags": ["Packs"],
        "summary": "Open a pack",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackOpeningRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackOpening"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "openPack"
      }
    },
    "/pack-openings/{packOpeningId}": {
      "get": {
        "tags": ["Packs"],
        "summary": "Get pack opening",
        "parameters": [
          {
            "$ref": "#/components/parameters/PackOpeningId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackOpening"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getPackOpening"
      }
    },
    "/trades": {
      "get": {
        "tags": ["Trades"],
        "summary": "List trades",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TradeListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTrades"
      },
      "post": {
        "tags": ["Trades"],
        "summary": "Create trade",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradeCreate"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/TradeCreateExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/TradeResponseExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTrade"
      }
    },
    "/trades/{tradeId}": {
      "get": {
        "tags": ["Trades"],
        "summary": "Get trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTrade"
      }
    },
    "/trades/{tradeId}/accept": {
      "post": {
        "tags": ["Trades"],
        "summary": "Accept trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "acceptTrade",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptCreate"
              }
            }
          }
        }
      }
    },
    "/trades/{tradeId}/decline": {
      "post": {
        "tags": ["Trades"],
        "summary": "Decline trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "declineTrade",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeclineCreate"
              }
            }
          }
        }
      }
    },
    "/trades/{tradeId}/cancel": {
      "post": {
        "tags": ["Trades"],
        "summary": "Cancel trade",
        "parameters": [
          {
            "$ref": "#/components/parameters/TradeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trade"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "cancelTrade",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelCreate"
              }
            }
          }
        }
      }
    },
    "/purchase-orders": {
      "get": {
        "tags": ["PurchaseOrders"],
        "summary": "List purchase orders",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PurchaseOrderListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listPurchaseOrders"
      },
      "post": {
        "tags": ["PurchaseOrders"],
        "summary": "Create purchase order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseOrderCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createPurchaseOrder"
      }
    },
    "/purchase-orders/{orderId}": {
      "get": {
        "tags": ["PurchaseOrders"],
        "summary": "Get purchase order",
        "parameters": [
          {
            "$ref": "#/components/parameters/OrderId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseOrder"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getPurchaseOrder"
      }
    },
    "/tournaments": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "List tournaments",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TournamentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTournaments"
      },
      "post": {
        "tags": ["Tournaments"],
        "summary": "Create tournament",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentCreate"
              },
              "examples": {
                "default": {
                  "$ref": "#/components/examples/TournamentCreateExample"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/TournamentResponseExample"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createTournament"
      }
    },
    "/tournaments/{tournamentId}": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "Get tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getTournament"
      },
      "patch": {
        "tags": ["Tournaments"],
        "summary": "Update tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateTournament"
      }
    },
    "/tournaments/{tournamentId}/publish": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Publish tournament (REG_OPEN)",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "publishTournament",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishCreate"
              }
            }
          }
        }
      }
    },
    "/tournaments/{tournamentId}/start": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Start tournament (IN_PROGRESS)",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "startTournament",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartCreate"
              }
            }
          }
        }
      }
    },
    "/tournaments/{tournamentId}/complete": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Complete tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "completeTournament",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteCreate"
              }
            }
          }
        }
      }
    },
    "/tournaments/{tournamentId}/cancel": {
      "post": {
        "tags": ["Tournaments"],
        "summary": "Cancel tournament",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tournament"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "cancelTournament",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelCreate"
              }
            }
          }
        }
      }
    },
    "/tournaments/{tournamentId}/results": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "List tournament results",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TournamentResultListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTournamentResultsForTournament"
      },
      "post": {
        "tags": ["Tournaments"],
        "summary": "Submit tournament result",
        "parameters": [
          {
            "$ref": "#/components/parameters/TournamentId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TournamentResultCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TournamentResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "submitTournamentResult"
      }
    },
    "/league-seasons": {
      "get": {
        "tags": ["League"],
        "summary": "List league seasons",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeagueSeasonListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listLeagueSeasons"
      },
      "post": {
        "tags": ["League"],
        "summary": "Create league season",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeagueSeasonCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueSeason"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createLeagueSeason"
      }
    },
    "/league-seasons/{leagueSeasonId}": {
      "get": {
        "tags": ["League"],
        "summary": "Get league season",
        "parameters": [
          {
            "$ref": "#/components/parameters/LeagueSeasonId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueSeason"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getLeagueSeason"
      },
      "patch": {
        "tags": ["League"],
        "summary": "Update league season",
        "parameters": [
          {
            "$ref": "#/components/parameters/LeagueSeasonId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeagueSeasonUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueSeason"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateLeagueSeason"
      }
    },
    "/league-seasons/{leagueSeasonId}/standings": {
      "get": {
        "tags": ["League"],
        "summary": "Get season standings",
        "parameters": [
          {
            "$ref": "#/components/parameters/LeagueSeasonId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeagueStandingListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listLeagueSeasonStandings"
      }
    },
    "/events": {
      "get": {
        "tags": ["Events"],
        "summary": "List events",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listEvents"
      },
      "post": {
        "tags": ["Events"],
        "summary": "Create event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createEvent"
      }
    },
    "/events/{eventId}": {
      "get": {
        "tags": ["Events"],
        "summary": "Get event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getEvent"
      },
      "patch": {
        "tags": ["Events"],
        "summary": "Update event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateEvent"
      }
    },
    "/events/{eventId}/schedule": {
      "post": {
        "tags": ["Events"],
        "summary": "Schedule event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "scheduleEvent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCreate"
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/cancel": {
      "post": {
        "tags": ["Events"],
        "summary": "Cancel event",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "cancelEvent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelCreate"
              }
            }
          }
        }
      }
    },
    "/events/{eventId}/participations": {
      "get": {
        "tags": ["Events"],
        "summary": "List participations",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          },
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventParticipationListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listEventParticipations"
      },
      "post": {
        "tags": ["Events"],
        "summary": "Register participation",
        "parameters": [
          {
            "$ref": "#/components/parameters/EventId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventParticipationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "registerEventParticipation"
      }
    },
    "/event-participations/{participationId}": {
      "patch": {
        "tags": ["Events"],
        "summary": "Update participation status",
        "parameters": [
          {
            "$ref": "#/components/parameters/ParticipationId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventParticipationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateEventParticipation"
      }
    },
    "/sages": {
      "get": {
        "tags": ["Sages"],
        "summary": "List sages",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "academyId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SageListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listSages"
      },
      "post": {
        "tags": ["Sages"],
        "summary": "Create sage",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SageCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "createSage"
      }
    },
    "/sages/{sageId}": {
      "get": {
        "tags": ["Sages"],
        "summary": "Get sage",
        "parameters": [
          {
            "$ref": "#/components/parameters/SageId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getSage"
      },
      "patch": {
        "tags": ["Sages"],
        "summary": "Update sage",
        "parameters": [
          {
            "$ref": "#/components/parameters/SageId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sage"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "updateSage"
      }
    },
    "/card-ownerships/{ownershipId}": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card ownership record",
        "parameters": [
          {
            "$ref": "#/components/parameters/OwnershipId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardOwnership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getCardOwnership"
      }
    },
    "/league-standings/{standingId}": {
      "get": {
        "tags": ["League"],
        "summary": "Get league standing",
        "parameters": [
          {
            "$ref": "#/components/parameters/StandingId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeagueStanding"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "getLeagueStanding"
      }
    },
    "/team-memberships": {
      "get": {
        "tags": ["Teams"],
        "summary": "List team memberships (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TeamMembershipListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTeamMemberships"
      }
    },
    "/card-ownerships": {
      "get": {
        "tags": ["Cards"],
        "summary": "List card ownership records (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "cardId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/CardOwnershipListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listCardOwnerships"
      }
    },
    "/housing-assignments": {
      "get": {
        "tags": ["Housing"],
        "summary": "List housing assignments (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "housingPlanId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/HousingAssignmentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listHousingAssignments"
      }
    },
    "/allowance-enrollments": {
      "get": {
        "tags": ["Allowance"],
        "summary": "List allowance enrollments (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "allowancePlanId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AllowanceEnrollmentListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listAllowanceEnrollments"
      }
    },
    "/pack-openings": {
      "get": {
        "tags": ["Packs"],
        "summary": "List pack openings (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "packId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/PackOpeningListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listPackOpenings"
      }
    },
    "/tournament-results": {
      "get": {
        "tags": ["Tournaments"],
        "summary": "List tournament results (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "tournamentId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TournamentResultListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listTournamentResults"
      }
    },
    "/league-standings": {
      "get": {
        "tags": ["League"],
        "summary": "List league standings (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "leagueSeasonId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "teamId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/LeagueStandingListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listLeagueStandings"
      }
    },
    "/event-participations": {
      "get": {
        "tags": ["Events"],
        "summary": "List event participations (global)",
        "parameters": [
          {
            "$ref": "#/components/parameters/PageParam"
          },
          {
            "$ref": "#/components/parameters/PageSizeParam"
          },
          {
            "name": "eventId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          },
          {
            "name": "collectorId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventParticipationListResponse"
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "429": {
            "$ref": "#/components/responses/RateLimited"
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        },
        "operationId": "listEventParticipationsGlobal"
      }
    }
  },
  "components": {
    "examples": {
      "AcademyCreateExample": {
        "summary": "Create Academy request",
        "value": {
          "name": "Aurora North",
          "description": "Primary academy for northern region",
          "officialMotto": "Light in Service of Harmony",
          "address": {
            "line1": "1 Radiant Way",
            "city": "Aurora City",
            "region": "Northern Reach",
            "country": "Aether Dominion",
            "postalCode": "AN-1001"
          },
          "code": "AUR",
          "timezone": "America/New_York",
          "metadata": {
            "region": "north",
            "specialization": "arts"
          },
          "crestImageUrl": "api/aetherbot-assets/academy-crest/auren-conservatory-crest.jpg",
          "heroBannerImageUrl": "api/aetherbot-assets/academy-hero/auren-conservatory-college.jpg"
        }
      },
      "AcademyResponseExample": {
        "summary": "Academy entity",
        "value": {
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "name": "Aurora North",
          "description": "Primary academy for northern region",
          "officialMotto": "Light in Service of Harmony",
          "address": {
            "line1": "1 Radiant Way",
            "city": "Aurora City",
            "region": "Northern Reach",
            "country": "Aether Dominion",
            "postalCode": "AN-1001"
          },
          "code": "AUR",
          "timezone": "America/New_York",
          "metadata": {
            "region": "north",
            "specialization": "arts"
          },
          "crestImageUrl": "api/aetherbot-assets/academy-crest/auren-conservatory-crest.jpg",
          "heroBannerImageUrl": "api/aetherbot-assets/academy-hero/auren-conservatory-college.jpg",
          "status": "ACTIVE",
          "activatedAt": "2025-01-11T08:00:00Z",
          "createdAt": "2025-01-10T12:00:00Z",
          "updatedAt": "2025-01-10T12:00:00Z"
        }
      },
      "AcademyListExample": {
        "summary": "List academies",
        "value": {
          "data": [
            {
              "academyId": "acad_auren",
              "name": "Auren Conservatory",
              "status": "ACTIVE"
            },
            {
              "academyId": "acad_zephyrium",
              "name": "Zephyrium Drift Academy",
              "status": "SUSPENDED"
            }
          ],
          "page": {
            "page": 1,
            "pageSize": 20,
            "total": 2,
            "totalPages": 1
          }
        }
      },
      "CurrencyCreateExample": {
        "summary": "Create Currency request",
        "value": {
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "code": "ARC",
          "name": "Arc Shard",
          "decimals": 2
        }
      },
      "CurrencyResponseExample": {
        "summary": "Currency entity",
        "value": {
          "currencyId": "6d2b8c9f-3a42-4f1e-b3d7-52f0d9b7ac21",
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "code": "ARC",
          "name": "Arc Shard",
          "decimals": 2,
          "activeFlag": true,
          "createdAt": "2025-01-10T12:05:00Z",
          "updatedAt": "2025-01-10T12:05:00Z"
        }
      },
      "CurrencyListExample": {
        "summary": "List currencies",
        "value": {
          "data": [],
          "page": {
            "page": 1,
            "pageSize": 20,
            "total": 0,
            "totalPages": 0
          }
        }
      },
      "TeamCreateExample": {
        "summary": "Create Team request",
        "value": {
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "name": "Nebula Riders"
        }
      },
      "TeamResponseExample": {
        "summary": "Team entity",
        "value": {
          "teamId": "c1b3a7e2-4f65-4d3f-9a16-d9f5c4a7e1b2",
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "name": "Nebula Riders",
          "memberCount": 0,
          "status": "ACTIVE",
          "createdAt": "2025-01-10T12:10:00Z",
          "updatedAt": "2025-01-10T12:10:00Z"
        }
      },
      "TeamListExample": {
        "summary": "List teams",
        "value": {
          "data": [],
          "page": {
            "page": 1,
            "pageSize": 20,
            "total": 0,
            "totalPages": 0
          }
        }
      },
      "TradeCreateExample": {
        "summary": "Create Trade request",
        "value": {
          "fromCollectorId": "4a1d2c3b-5e6f-4a7b-8c9d-1e2f3a4b5c6d",
          "toCollectorId": "5b2e3d4c-6f7a-4b8c-9d1e-2f3a4b5c6d7e",
          "offeredCardIds": ["a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"],
          "requestedCardIds": ["b2c3d4e5-f6a7-4b8c-9d0e-1f2a3b4c5d6e"]
        }
      },
      "TradeResponseExample": {
        "summary": "Trade entity",
        "value": {
          "tradeId": "d4e5f6a7-b8c9-4d0e-9f1a-2b3c4d5e6f70",
          "fromCollectorId": "4a1d2c3b-5e6f-4a7b-8c9d-1e2f3a4b5c6d",
          "toCollectorId": "5b2e3d4c-6f7a-4b8c-9d1e-2f3a4b5c6d7e",
          "offeredCardIds": ["a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d"],
          "requestedCardIds": ["b2c3d4e5-f6a7-4b8c-9d0e-1f2a3b4c5d6e"],
          "createdDateTime": "2025-01-10T12:30:00Z",
          "status": "PENDING",
          "updatedAt": "2025-01-10T12:45:00Z",
          "expiresAt": "2025-01-17T12:30:00Z"
        }
      },
      "TradeListExample": {
        "summary": "List trades",
        "value": {
          "data": [],
          "page": {
            "page": 1,
            "pageSize": 20,
            "total": 0,
            "totalPages": 0
          }
        }
      },
      "TournamentCreateExample": {
        "summary": "Create Tournament request",
        "value": {
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "name": "Spring Invitational",
          "seasonYear": 2025,
          "type": "MAJOR_A",
          "startDate": "2025-03-01T15:00:00Z",
          "endDate": "2025-03-07T22:00:00Z"
        }
      },
      "TournamentResponseExample": {
        "summary": "Tournament entity",
        "value": {
          "tournamentId": "e6f7a8b9-c0d1-4e2f-9a3b-4c5d6e7f8a90",
          "academyId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
          "name": "Spring Invitational",
          "seasonYear": 2025,
          "type": "MAJOR_A",
          "startDate": "2025-03-01T15:00:00Z",
          "endDate": "2025-03-07T22:00:00Z",
          "status": "DRAFT",
          "createdAt": "2025-01-10T12:40:00Z",
          "updatedAt": "2025-01-10T12:45:00Z"
        }
      },
      "TournamentListExample": {
        "summary": "List tournaments",
        "value": {
          "data": [],
          "page": {
            "page": 1,
            "pageSize": 20,
            "total": 0,
            "totalPages": 0
          }
        }
      },
      "UnauthorizedErrorExample": {
        "summary": "Unauthorized error",
        "value": {
          "error": {
            "code": "UNAUTHORIZED",
            "message": "Authentication token missing or invalid",
            "traceId": "0f1e2d3c-4b5a-6789-8a7b-6c5d4e3f2a10"
          }
        }
      },
      "ForbiddenErrorExample": {
        "summary": "Forbidden error",
        "value": {
          "error": {
            "code": "FORBIDDEN",
            "message": "You do not have permission to access this resource",
            "traceId": "1a2b3c4d-5e6f-7081-92a3-b4c5d6e7f801"
          }
        }
      },
      "NotFoundErrorExample": {
        "summary": "Not found error",
        "value": {
          "error": {
            "code": "NOT_FOUND",
            "message": "Requested resource was not found",
            "traceId": "2b3c4d5e-6f70-8192-a3b4-c5d6e7f8a901"
          }
        }
      },
      "ConflictErrorExample": {
        "summary": "Conflict error",
        "value": {
          "error": {
            "code": "CONFLICT",
            "message": "Resource is in a conflicting state",
            "traceId": "3c4d5e6f-7081-92a3-b4c5-d6e7f8a9b012"
          }
        }
      },
      "ValidationErrorExample": {
        "summary": "Validation error",
        "value": {
          "error": {
            "code": "VALIDATION_ERROR",
            "message": "One or more fields are invalid",
            "fieldErrors": [
              {
                "field": "name",
                "message": "Name is required"
              }
            ],
            "traceId": "4d5e6f70-8192-a3b4-c5d6-e7f8a9b0c123"
          }
        }
      },
      "RateLimitedErrorExample": {
        "summary": "Rate limited error",
        "value": {
          "error": {
            "code": "RATE_LIMITED",
            "message": "Too many requests, slow down",
            "traceId": "5e6f7081-92a3-b4c5-d6e7-f8a9b0c1d234"
          }
        }
      },
      "InternalErrorExample": {
        "summary": "Internal error",
        "value": {
          "error": {
            "code": "INTERNAL_ERROR",
            "message": "Unexpected server error",
            "traceId": "6f708192-a3b4-c5d6-e7f8-a9b0c1d2e345"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "PageSizeParam": {
        "name": "pageSize",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "AcademyId": {
        "name": "academyId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "StoreId": {
        "name": "storeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "BattleStationId": {
        "name": "battleStationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "RuleSetId": {
        "name": "ruleSetId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "EntitlementProfileId": {
        "name": "entitlementProfileId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CurrencyId": {
        "name": "currencyId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CurrencyAccountId": {
        "name": "currencyAccountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CollectorId": {
        "name": "collectorId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TeamId": {
        "name": "teamId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TeamMembershipId": {
        "name": "teamMembershipId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "AetherbotId": {
        "name": "aetherbotId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "CardId": {
        "name": "cardId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "HousingPlanId": {
        "name": "housingPlanId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "AssignmentId": {
        "name": "assignmentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "AllowancePlanId": {
        "name": "allowancePlanId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "EnrollmentId": {
        "name": "enrollmentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "InventoryItemId": {
        "name": "inventoryItemId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "PackId": {
        "name": "packId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "PackOpeningId": {
        "name": "packOpeningId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TradeId": {
        "name": "tradeId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "OrderId": {
        "name": "orderId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "TournamentId": {
        "name": "tournamentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "LeagueSeasonId": {
        "name": "leagueSeasonId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "EventId": {
        "name": "eventId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "ParticipationId": {
        "name": "participationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "SageId": {
        "name": "sageId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "OwnershipId": {
        "name": "ownershipId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "StandingId": {
        "name": "standingId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/UnauthorizedErrorExample"
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/ForbiddenErrorExample"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/NotFoundErrorExample"
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/ConflictErrorExample"
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/ValidationErrorExample"
              }
            }
          }
        }
      },
      "RateLimited": {
        "description": "Too many requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/RateLimitedErrorExample"
              }
            }
          }
        }
      },
      "InternalError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/InternalErrorExample"
              }
            }
          }
        }
      },
      "AcademyListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AcademyListEnvelope"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/AcademyListExample"
              }
            }
          }
        }
      },
      "StoreListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StoreListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 0,
                    "totalPages": 0
                  }
                }
              }
            }
          }
        }
      },
      "BattleStationListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BattleStationListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "RuleSetListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleSetListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "EntitlementProfileListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EntitlementProfileListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "CurrencyListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CurrencyListEnvelope"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/CurrencyListExample"
              }
            }
          }
        }
      },
      "CurrencyAccountListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CurrencyAccountListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "CardCollectorListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CardCollectorListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "CardCollectorSummaryListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CardCollectorSummaryListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [
                    {
                      "collectorId": "3f9c2d44-8b6a-4d2e-9c2b-9f7a1a5c1d9e",
                      "userName": "Aurora Weaver",
                      "name": "Aurora Chen",
                      "avatarImageUrl": "/api/aetherbot-assets/card-collector-avatars/female-1.jpg",
                      "status": "ACTIVE",
                      "createdAt": "2024-01-15T08:30:00Z",
                      "academyId": "acad_auren"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "TeamListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TeamListEnvelope"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/TeamListExample"
              }
            }
          }
        }
      },
      "TeamMembershipListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TeamMembershipListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "AetherbotListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AetherbotListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "AetherbotCardListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AetherbotCardListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "CardOwnershipListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CardOwnershipListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "HousingPlanListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HousingPlanListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "HousingAssignmentListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HousingAssignmentListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "AllowancePlanListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AllowancePlanListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "AllowanceEnrollmentListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AllowanceEnrollmentListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "InventoryItemListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InventoryItemListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 0,
                    "totalPages": 0
                  }
                }
              }
            }
          }
        }
      },
      "PackListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PackListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "TradeListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TradeListEnvelope"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/TradeListExample"
              }
            }
          }
        }
      },
      "PurchaseOrderListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PurchaseOrderListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "TournamentListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TournamentListEnvelope"
            },
            "examples": {
              "default": {
                "$ref": "#/components/examples/TournamentListExample"
              }
            }
          }
        }
      },
      "TournamentResultListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TournamentResultListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "LeagueSeasonListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LeagueSeasonListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "LeagueStandingListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LeagueStandingListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "EventListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "EventParticipationListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/EventParticipationListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "SageListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SageListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      },
      "PackOpeningListResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PackOpeningListEnvelope"
            },
            "examples": {
              "default": {
                "value": {
                  "data": [],
                  "page": {
                    "page": 1,
                    "pageSize": 20,
                    "total": 1,
                    "totalPages": 1
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "PagedListBase": {
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["code", "message"],
        "properties": {
          "type": {
            "type": "string",
            "description": "Problem type URI (RFC 9457 style)"
          },
          "title": {
            "type": "string",
            "description": "Short, human-readable summary"
          },
          "status": {
            "type": "integer",
            "minimum": 100,
            "maximum": 599
          },
          "code": {
            "type": "string",
            "enum": [
              "NOT_FOUND",
              "VALIDATION_ERROR",
              "CONFLICT",
              "FORBIDDEN",
              "UNAUTHORIZED",
              "RATE_LIMITED",
              "INTERNAL_ERROR"
            ]
          },
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string",
            "description": "Detailed explanation (alias for message in ProblemDetails)",
            "nullable": true
          },
          "traceId": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "description": "Optional list of granular error details",
            "items": {
              "$ref": "#/components/schemas/FieldError"
            }
          }
        }
      },
      "FieldError": {
        "type": "object",
        "required": ["field", "message"],
        "properties": {
          "field": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error"
          },
          {
            "type": "object",
            "properties": {
              "fieldErrors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/FieldError"
                }
              }
            }
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "required": ["error"],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ValidationError"
          }
        }
      },
      "AcademySummary": {
        "type": "object",
        "required": ["academyId", "name", "status"],
        "properties": {
          "academyId": {
            "type": "string",
            "description": "Unique identifier for the academy"
          },
          "name": {
            "type": "string",
            "description": "Display name for the academy"
          },
          "status": {
            "type": "string",
            "description": "Lifecycle status for the academy",
            "enum": ["DRAFT", "ACTIVE", "SUSPENDED", "ARCHIVED"]
          }
        }
      },
      "AcademyListEnvelope": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedListBase"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AcademySummary"
                }
              }
            }
          }
        ]
      },
      "StoreListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Store"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "BattleStationListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BattleStation"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "RuleSetListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleSet"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EntitlementProfileListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitlementProfile"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CurrencyListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CurrencyAccountListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyAccount"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CardCollectorListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardCollector"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CardCollectorSummaryListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardCollectorSummary"
            }
          }
        }
      },
      "TeamListEnvelope": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PagedListBase"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        ]
      },
      "TeamMembershipListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeamMembership"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AetherbotListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Aetherbot"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AetherbotCardListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AetherbotCard"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "CardOwnershipListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CardOwnership"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "HousingPlanListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HousingPlan"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "HousingAssignmentListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HousingAssignment"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AllowancePlanListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowancePlan"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AllowanceEnrollmentListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowanceEnrollment"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "InventoryItemListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryItem"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "PackListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pack"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TradeListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trade"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "PurchaseOrderListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrder"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TournamentListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tournament"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "TournamentResultListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TournamentResult"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "PackOpeningListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackOpening"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "LeagueSeasonListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueSeason"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "LeagueStandingListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueStanding"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EventListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "EventParticipationListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventParticipation"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "SageListEnvelope": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sage"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      },
      "AcademyAddress": {
        "type": "object",
        "required": ["line1", "city", "country"],
        "properties": {
          "line1": {
            "type": "string",
            "description": "Primary address line"
          },
          "line2": {
            "type": "string",
            "description": "Secondary address line",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City or locality"
          },
          "region": {
            "type": "string",
            "description": "State, province, or regional subdivision",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country or sovereign territory"
          },
          "postalCode": {
            "type": "string",
            "description": "Postal or ZIP code",
            "nullable": true
          }
        }
      },
      "AcademyBase": {
        "type": "object",
        "required": [
          "name",
          "description",
          "officialMotto",
          "address",
          "timezone",
          "crestImageUrl",
          "heroBannerImageUrl"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name for the academy"
          },
          "description": {
            "type": "string",
            "description": "Narrative summary describing the academy"
          },
          "officialMotto": {
            "type": "string",
            "description": "Official motto or rallying phrase for the academy"
          },
          "address": {
            "$ref": "#/components/schemas/AcademyAddress"
          },
          "code": {
            "type": "string",
            "description": "Optional short code used for referencing the academy"
          },
          "timezone": {
            "type": "string",
            "description": "IANA timezone identifier for the academy's primary operations"
          },
          "metadata": {
            "type": "object",
            "description": "Arbitrary metadata for downstream systems",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "crestImageUrl": {
            "type": "string",
            "format": "uri",
            "description": "Public URL for the academy crest image"
          },
          "heroBannerImageUrl": {
            "type": "string",
            "format": "uri",
            "description": "Public URL for the hero banner image"
          }
        }
      },
      "Academy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AcademyBase"
          },
          {
            "type": "object",
            "required": ["academyId", "status", "createdAt"],
            "properties": {
              "academyId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": ["DRAFT", "ACTIVE", "SUSPENDED", "ARCHIVED"]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "activatedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true,
                "description": "Timestamp indicating when the academy became active"
              }
            }
          }
        ]
      },
      "AcademyCreate": {
        "$ref": "#/components/schemas/AcademyBase"
      },
      "AcademyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "officialMotto": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AcademyAddress"
          },
          "code": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "boolean"
                }
              ]
            }
          },
          "crestImageUrl": {
            "type": "string",
            "format": "uri"
          },
          "heroBannerImageUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "ACTIVE", "SUSPENDED", "ARCHIVED"]
          }
        }
      },
      "Store": {
        "type": "object",
        "required": ["storeId", "academyId", "name", "status", "createdAt"],
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "inventoryPolicy": {
            "type": "string"
          },
          "defaultCurrencyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StoreCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "inventoryPolicy": {
            "type": "string"
          },
          "defaultCurrencyId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "StoreUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "inventoryPolicy": {
            "type": "string"
          },
          "defaultCurrencyId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        }
      },
      "BattleStation": {
        "type": "object",
        "required": ["battleStationId", "academyId", "stationKey", "status"],
        "properties": {
          "battleStationId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "stationCode": {
            "type": "string",
            "nullable": true
          },
          "stationKey": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISABLED", "MAINTENANCE"]
          },
          "systemManaged": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "locationHint": {
            "type": "string",
            "nullable": true
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entitlementProfileId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "ruleSetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "effectiveRuleSetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "effectiveRuleSetSource": {
            "type": "string",
            "enum": ["INLINE", "ACADEMY", "STORE", "GLOBAL"],
            "nullable": true
          },
          "supportedCurrencyIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "allowOfflineQueue": {
            "type": "boolean",
            "nullable": true
          },
          "lastHeartbeatAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BattleStationCreate": {
        "type": "object",
        "required": ["academyId", "stationKey"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "stationKey": {
            "type": "string"
          },
          "stationCode": {
            "type": "string"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BattleStationUpdate": {
        "type": "object",
        "properties": {
          "stationCode": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "entitlementProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "ruleSetId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISABLED", "MAINTENANCE"]
          }
        }
      },
      "RuleSet": {
        "type": "object",
        "required": ["ruleSetId", "name", "scope", "version", "status"],
        "properties": {
          "ruleSetId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": ["GLOBAL", "ACADEMY", "STORE", "STATION"]
          },
          "version": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "DEPRECATED"]
          },
          "data": {
            "type": "object"
          },
          "effectiveFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "effectiveTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RuleSetCreate": {
        "type": "object",
        "required": ["name", "scope", "data"],
        "properties": {
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string",
            "enum": ["GLOBAL", "ACADEMY", "STORE", "STATION"]
          },
          "data": {
            "type": "object"
          }
        }
      },
      "RuleSetUpdate": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "DEPRECATED"]
          }
        }
      },
      "EntitlementProfile": {
        "type": "object",
        "required": ["entitlementProfileId", "academyId", "name", "status"],
        "properties": {
          "entitlementProfileId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EntitlementProfileCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EntitlementProfileUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          }
        }
      },
      "Currency": {
        "type": "object",
        "required": ["currencyId", "academyId", "code", "name", "decimals", "activeFlag"],
        "properties": {
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "decimals": {
            "type": "integer"
          },
          "activeFlag": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CurrencyCreate": {
        "type": "object",
        "required": ["academyId", "code", "name", "decimals"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "decimals": {
            "type": "integer"
          }
        }
      },
      "CurrencyUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "activeFlag": {
            "type": "boolean"
          }
        }
      },
      "CurrencyAccount": {
        "type": "object",
        "required": [
          "currencyAccountId",
          "collectorId",
          "currencyId",
          "balance",
          "reservedBalance"
        ],
        "properties": {
          "currencyAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          },
          "balance": {
            "type": "number"
          },
          "reservedBalance": {
            "type": "number"
          },
          "lastTransactionAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CurrencyAccountCreate": {
        "type": "object",
        "required": ["collectorId", "currencyId"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CardCollectorSummary": {
        "type": "object",
        "required": [
          "collectorId",
          "userName",
          "name",
          "avatarImageUrl",
          "status",
          "createdAt",
          "academyId"
        ],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatarImageUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "SUSPENDED", "RETIRED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CardCollector": {
        "type": "object",
        "required": [
          "collectorId",
          "handle",
          "userName",
          "name",
          "gender",
          "avatarImageUrl",
          "joinDate",
          "status",
          "academyId"
        ],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "handle": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "na"]
          },
          "avatarImageUrl": {
            "type": "string",
            "format": "uri"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time"
          },
          "rank": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "SUSPENDED", "RETIRED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CardCollectorCreate": {
        "type": "object",
        "required": ["handle", "userName", "name", "gender"],
        "properties": {
          "handle": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "na"]
          },
          "avatarImageUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "CardCollectorUpdate": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "na"]
          },
          "avatarImageUrl": {
            "type": "string",
            "format": "uri"
          },
          "rank": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "SUSPENDED", "RETIRED"]
          }
        }
      },
      "Team": {
        "type": "object",
        "required": ["teamId", "academyId", "name", "memberCount", "status"],
        "properties": {
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "formedDate": {
            "type": "string",
            "format": "date-time"
          },
          "memberCount": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISBANDED", "ARCHIVED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TeamCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "TeamUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "DISBANDED", "ARCHIVED"]
          }
        }
      },
      "TeamMembership": {
        "type": "object",
        "required": [
          "teamMembershipId",
          "teamId",
          "collectorId",
          "role",
          "joinedDate",
          "activeFlag"
        ],
        "properties": {
          "teamMembershipId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["CAPTAIN", "MEMBER"]
          },
          "joinedDate": {
            "type": "string",
            "format": "date-time"
          },
          "activeFlag": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TeamMembershipCreate": {
        "type": "object",
        "required": ["collectorId", "role"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["CAPTAIN", "MEMBER"]
          }
        }
      },
      "TeamMembershipUpdate": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": ["CAPTAIN", "MEMBER"]
          },
          "activeFlag": {
            "type": "boolean"
          }
        }
      },
      "Aetherbot": {
        "type": "object",
        "required": ["aetherbotId", "slug", "label", "rarity"],
        "properties": {
          "aetherbotId": {
            "type": "string",
            "format": "uuid"
          },
          "slug": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"]
          },
          "element": {
            "type": "string"
          },
          "emotion": {
            "type": "string"
          },
          "habitat": {
            "type": "string"
          },
          "stats": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "lore": {
            "type": "object"
          }
        }
      },
      "AetherbotCreate": {
        "type": "object",
        "required": ["slug", "label", "rarity"],
        "properties": {
          "slug": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"]
          },
          "role": {
            "type": "string"
          },
          "element": {
            "type": "string"
          },
          "emotion": {
            "type": "string"
          },
          "habitat": {
            "type": "string"
          },
          "stats": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "lore": {
            "type": "object"
          }
        }
      },
      "AetherbotCard": {
        "type": "object",
        "required": [
          "cardId",
          "aetherbotId",
          "rarity",
          "acquisitionDate",
          "acquisitionType",
          "status"
        ],
        "properties": {
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "aetherbotId": {
            "type": "string",
            "format": "uuid"
          },
          "currentOwnerCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "edition": {
            "type": "string"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"]
          },
          "mintNumber": {
            "type": "integer"
          },
          "grade": {
            "type": "string",
            "nullable": true
          },
          "acquisitionDate": {
            "type": "string",
            "format": "date-time"
          },
          "acquisitionType": {
            "type": "string",
            "enum": ["PACK", "TRADE", "PURCHASE", "REWARD"]
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "LOCKED", "BURNED"]
          },
          "provenanceRef": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CardOwnership": {
        "type": "object",
        "required": [
          "ownershipId",
          "cardId",
          "ownerCollectorId",
          "acquiredDate",
          "acquisitionType"
        ],
        "properties": {
          "ownershipId": {
            "type": "string",
            "format": "uuid"
          },
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "ownerCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "acquiredDate": {
            "type": "string",
            "format": "date-time"
          },
          "acquisitionType": {
            "type": "string",
            "enum": ["PACK", "TRADE", "PURCHASE", "REWARD"]
          },
          "relinquishedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transferEventType": {
            "type": "string",
            "enum": ["TRADE", "PURCHASE", "PACK", "REWARD"],
            "nullable": true
          }
        }
      },
      "HousingPlan": {
        "type": "object",
        "required": [
          "housingPlanId",
          "academyId",
          "name",
          "capacityType",
          "status",
          "startDate"
        ],
        "properties": {
          "housingPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capacityType": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingPlanCreate": {
        "type": "object",
        "required": ["academyId", "name", "capacityType", "startDate"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "capacityType": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingPlanUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingAssignment": {
        "type": "object",
        "required": [
          "assignmentId",
          "housingPlanId",
          "collectorId",
          "startDate",
          "status"
        ],
        "properties": {
          "assignmentId": {
            "type": "string",
            "format": "uuid"
          },
          "housingPlanId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingAssignmentCreate": {
        "type": "object",
        "required": ["collectorId", "startDate"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HousingAssignmentUpdate": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "cancellationReason": {
            "type": "string"
          }
        }
      },
      "AllowancePlan": {
        "type": "object",
        "required": [
          "allowancePlanId",
          "academyId",
          "name",
          "cycle",
          "creditAmount",
          "type",
          "status",
          "startDate"
        ],
        "properties": {
          "allowancePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "cycle": {
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "SEASON"]
          },
          "creditAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": ["NUTRITION", "ENERGY", "FOCUS"]
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowancePlanCreate": {
        "type": "object",
        "required": ["academyId", "name", "cycle", "creditAmount", "type", "startDate"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "cycle": {
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "SEASON"]
          },
          "creditAmount": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": ["NUTRITION", "ENERGY", "FOCUS"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowancePlanUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE"]
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowanceEnrollment": {
        "type": "object",
        "required": [
          "enrollmentId",
          "allowancePlanId",
          "collectorId",
          "startDate",
          "status"
        ],
        "properties": {
          "enrollmentId": {
            "type": "string",
            "format": "uuid"
          },
          "allowancePlanId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "remainingCredits": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowanceEnrollmentCreate": {
        "type": "object",
        "required": ["collectorId", "startDate"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AllowanceEnrollmentUpdate": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "EXPIRED", "CANCELLED"]
          }
        }
      },
      "InventoryItem": {
        "type": "object",
        "required": [
          "inventoryItemId",
          "storeId",
          "quantityAvailable",
          "priceCurrencyUnits",
          "createdAt"
        ],
        "properties": {
          "inventoryItemId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "cardId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "aetherbotId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "quantityAvailable": {
            "type": "integer"
          },
          "reservedQuantity": {
            "type": "integer"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "rarity": {
            "type": "string",
            "enum": ["Common", "Uncommon", "Rare", "Legendary", "Keystone"],
            "nullable": true
          },
          "edition": {
            "type": "string",
            "nullable": true
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InventoryItemCreate": {
        "type": "object",
        "required": ["storeId", "quantityAvailable", "priceCurrencyUnits"],
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "quantityAvailable": {
            "type": "integer"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "cardId": {
            "type": "string",
            "format": "uuid"
          },
          "aetherbotId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "InventoryItemUpdate": {
        "type": "object",
        "properties": {
          "quantityAvailable": {
            "type": "integer"
          },
          "reservedQuantity": {
            "type": "integer"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time"
          },
          "availableTo": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Pack": {
        "type": "object",
        "required": [
          "packId",
          "name",
          "edition",
          "rarityMixProfile",
          "priceCurrencyUnits",
          "status"
        ],
        "properties": {
          "packId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "rarityMixProfile": {
            "type": "string"
          },
          "priceCurrencyUnits": {
            "type": "number"
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "RETIRED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PackCreate": {
        "type": "object",
        "required": ["name", "edition", "rarityMixProfile", "priceCurrencyUnits"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "edition": {
            "type": "string"
          },
          "rarityMixProfile": {
            "type": "string"
          },
          "priceCurrencyUnits": {
            "type": "number"
          }
        }
      },
      "PackUpdate": {
        "type": "object",
        "properties": {
          "rarityMixProfile": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "INACTIVE", "RETIRED"]
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time"
          },
          "availableTo": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PackOpeningRequest": {
        "type": "object",
        "required": ["collectorId"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "battleStationId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PackOpening": {
        "type": "object",
        "required": ["packOpeningId", "packId", "collectorId", "openedDateTime"],
        "properties": {
          "packOpeningId": {
            "type": "string",
            "format": "uuid"
          },
          "packId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "battleStationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "openedDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "resultingCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "randomnessProof": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ActionRequestMetadata": {
        "type": "object",
        "required": ["performedBy"],
        "properties": {
          "performedBy": {
            "type": "string",
            "format": "uuid",
            "description": "Identifier of the staff member or system applying the action."
          },
          "note": {
            "type": "string",
            "maxLength": 512,
            "nullable": true,
            "description": "Optional contextual note captured with the action."
          }
        },
        "additionalProperties": false
      },
      "ActionRequestWithReason": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionRequestMetadata"
          },
          {
            "type": "object",
            "required": ["reason"],
            "properties": {
              "reason": {
                "type": "string",
                "maxLength": 512,
                "description": "Human readable reason describing why the action was requested."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "AcceptCreate": {
        "$ref": "#/components/schemas/ActionRequestMetadata"
      },
      "DeclineCreate": {
        "$ref": "#/components/schemas/ActionRequestWithReason"
      },
      "CancelCreate": {
        "$ref": "#/components/schemas/ActionRequestWithReason"
      },
      "PublishCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionRequestMetadata"
          },
          {
            "type": "object",
            "properties": {
              "registrationOpenDate": {
                "type": "string",
                "format": "date-time",
                "description": "Optional override for when registration should open."
              },
              "registrationCloseDate": {
                "type": "string",
                "format": "date-time",
                "description": "Optional override for when registration should close."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StartCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionRequestMetadata"
          },
          {
            "type": "object",
            "properties": {
              "round": {
                "type": "integer",
                "minimum": 1,
                "description": "Current tournament round to mark as active."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "CompleteCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionRequestMetadata"
          },
          {
            "type": "object",
            "properties": {
              "winnerTeamId": {
                "type": "string",
                "format": "uuid",
                "description": "Team declared as the tournament winner."
              },
              "completedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the competition concluded."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ScheduleCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionRequestMetadata"
          },
          {
            "type": "object",
            "required": ["startDateTime", "endDateTime"],
            "properties": {
              "startDateTime": {
                "type": "string",
                "format": "date-time",
                "description": "Event start date/time."
              },
              "endDateTime": {
                "type": "string",
                "format": "date-time",
                "description": "Event end date/time."
              },
              "location": {
                "type": "string",
                "description": "Venue or location details for the scheduled event."
              },
              "capacity": {
                "type": "integer",
                "minimum": 0,
                "description": "Updated maximum attendee count."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Trade": {
        "type": "object",
        "required": [
          "tradeId",
          "fromCollectorId",
          "toCollectorId",
          "status",
          "createdDateTime"
        ],
        "properties": {
          "tradeId": {
            "type": "string",
            "format": "uuid"
          },
          "fromCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "toCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "offeredCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "requestedCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "ACCEPTED", "DECLINED", "CANCELLED", "SETTLED"]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "TradeCreate": {
        "type": "object",
        "required": [
          "fromCollectorId",
          "toCollectorId",
          "offeredCardIds",
          "requestedCardIds"
        ],
        "properties": {
          "fromCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "toCollectorId": {
            "type": "string",
            "format": "uuid"
          },
          "offeredCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "requestedCardIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "PurchaseOrder": {
        "type": "object",
        "required": [
          "orderId",
          "storeId",
          "collectorId",
          "totalCurrencyAmount",
          "status",
          "createdAt"
        ],
        "properties": {
          "orderId": {
            "type": "string",
            "format": "uuid"
          },
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "totalCurrencyAmount": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "COMPLETED", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "lineItemId",
                "productType",
                "productId",
                "quantity",
                "unitPrice",
                "extendedPrice"
              ],
              "properties": {
                "lineItemId": {
                  "type": "string",
                  "format": "uuid"
                },
                "productType": {
                  "type": "string",
                  "enum": ["PACK", "CARD"]
                },
                "productId": {
                  "type": "string",
                  "format": "uuid"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number"
                },
                "extendedPrice": {
                  "type": "number"
                }
              }
            }
          }
        }
      },
      "PurchaseOrderCreate": {
        "type": "object",
        "required": ["storeId", "collectorId", "currencyAccountId", "lineItems"],
        "properties": {
          "storeId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "currencyAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "lineItems": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["productType", "productId", "quantity"],
              "properties": {
                "productType": {
                  "type": "string",
                  "enum": ["PACK", "CARD"]
                },
                "productId": {
                  "type": "string",
                  "format": "uuid"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "Tournament": {
        "type": "object",
        "required": [
          "tournamentId",
          "academyId",
          "name",
          "seasonYear",
          "type",
          "status",
          "startDate",
          "endDate"
        ],
        "properties": {
          "tournamentId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "seasonYear": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["MAJOR_A", "MAJOR_B"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "REG_OPEN", "IN_PROGRESS", "COMPLETED", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TournamentCreate": {
        "type": "object",
        "required": ["academyId", "name", "seasonYear", "type", "startDate", "endDate"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "seasonYear": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": ["MAJOR_A", "MAJOR_B"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TournamentUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "REG_OPEN", "IN_PROGRESS", "COMPLETED", "CANCELLED"]
          }
        }
      },
      "TournamentResult": {
        "type": "object",
        "required": ["resultId", "tournamentId", "teamId", "placement"],
        "properties": {
          "resultId": {
            "type": "string",
            "format": "uuid"
          },
          "tournamentId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "placement": {
            "type": "integer"
          },
          "pointsAwarded": {
            "type": "integer"
          },
          "prizeAwardedRef": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TournamentResultCreate": {
        "type": "object",
        "required": ["teamId", "placement"],
        "properties": {
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "placement": {
            "type": "integer"
          },
          "pointsAwarded": {
            "type": "integer"
          },
          "prizeAwardedRef": {
            "type": "string"
          }
        }
      },
      "LeagueSeason": {
        "type": "object",
        "required": [
          "leagueSeasonId",
          "academyId",
          "year",
          "divisionStructureVersion",
          "phase",
          "startDate",
          "endDate"
        ],
        "properties": {
          "leagueSeasonId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "year": {
            "type": "integer"
          },
          "divisionStructureVersion": {
            "type": "integer"
          },
          "phase": {
            "type": "string",
            "enum": ["PRESEASON", "ACTIVE", "OFFSEASON"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "standingsLockAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LeagueSeasonCreate": {
        "type": "object",
        "required": [
          "academyId",
          "year",
          "divisionStructureVersion",
          "phase",
          "startDate",
          "endDate"
        ],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "year": {
            "type": "integer"
          },
          "divisionStructureVersion": {
            "type": "integer"
          },
          "phase": {
            "type": "string",
            "enum": ["PRESEASON", "ACTIVE", "OFFSEASON"]
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LeagueSeasonUpdate": {
        "type": "object",
        "properties": {
          "phase": {
            "type": "string",
            "enum": ["PRESEASON", "ACTIVE", "OFFSEASON"]
          },
          "standingsLockAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LeagueStanding": {
        "type": "object",
        "required": [
          "standingId",
          "leagueSeasonId",
          "teamId",
          "division",
          "wins",
          "losses",
          "rating"
        ],
        "properties": {
          "standingId": {
            "type": "string",
            "format": "uuid"
          },
          "leagueSeasonId": {
            "type": "string",
            "format": "uuid"
          },
          "teamId": {
            "type": "string",
            "format": "uuid"
          },
          "division": {
            "type": "string",
            "enum": ["DIV1", "DIV2", "DIV3"]
          },
          "wins": {
            "type": "integer"
          },
          "losses": {
            "type": "integer"
          },
          "rating": {
            "type": "number"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Event": {
        "type": "object",
        "required": [
          "eventId",
          "academyId",
          "type",
          "topic",
          "startDateTime",
          "endDateTime",
          "status"
        ],
        "properties": {
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": ["LECTURE", "TRAINING"]
          },
          "topic": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "capacity": {
            "type": "integer"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventCreate": {
        "type": "object",
        "required": ["academyId", "type", "topic", "startDateTime", "endDateTime"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": ["LECTURE", "TRAINING"]
          },
          "topic": {
            "type": "string"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventUpdate": {
        "type": "object",
        "properties": {
          "topic": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["DRAFT", "SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED"]
          }
        }
      },
      "EventParticipation": {
        "type": "object",
        "required": ["participationId", "eventId", "collectorId", "role", "status"],
        "properties": {
          "participationId": {
            "type": "string",
            "format": "uuid"
          },
          "eventId": {
            "type": "string",
            "format": "uuid"
          },
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["ATTENDEE", "ASSISTANT"]
          },
          "status": {
            "type": "string",
            "enum": ["REGISTERED", "WAITLIST", "ATTENDED", "NO_SHOW", "CANCELLED"]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventParticipationCreate": {
        "type": "object",
        "required": ["collectorId", "role"],
        "properties": {
          "collectorId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": ["ATTENDEE", "ASSISTANT"]
          }
        }
      },
      "EventParticipationUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["REGISTERED", "WAITLIST", "ATTENDED", "NO_SHOW", "CANCELLED"]
          }
        }
      },
      "Sage": {
        "type": "object",
        "required": ["sageId", "academyId", "name"],
        "properties": {
          "sageId": {
            "type": "string",
            "format": "uuid"
          },
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "specialtyElement": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      },
      "SageCreate": {
        "type": "object",
        "required": ["academyId", "name"],
        "properties": {
          "academyId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SageUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "specialtyElement": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      }
    }
  }
}
